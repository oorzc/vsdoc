import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as i,c as a,a as e,b as t,d as r,e as s,r as l}from"./app.ed9f300c.js";const c={},d=e("h1",{id:"概述",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#概述","aria-hidden":"true"},"#"),t(" 概述")],-1),h={href:"https://github.com/Microsoft/vscode/tree/master/extensions/html",target:"_blank",rel:"noopener noreferrer"},u=e("code",null,"console.",-1),g=e("code",null,"log",-1),_={href:"https://github.com/Microsoft/vscode/tree/master/extensions/typescript-language-features",target:"_blank",rel:"noopener noreferrer"},p=e("p",null,"语言特性大致可以分为下面两种：",-1),f=e("h2",{id:"声明式语言特性",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#声明式语言特性","aria-hidden":"true"},"#"),t(" 声明式语言特性")],-1),m=e("hr",null,null,-1),v=e("em",null,"编程式语言特性",-1),b={href:"https://github.com/Microsoft/vscode/tree/master/extensions/html",target:"_blank",rel:"noopener noreferrer"},x={href:"https://github.com/Microsoft/vscode/tree/master/extensions/css",target:"_blank",rel:"noopener noreferrer"},S={href:"https://github.com/Microsoft/vscode/tree/master/extensions/typescript-basics",target:"_blank",rel:"noopener noreferrer"},k=s('<ul><li>语法高亮</li><li>代码片段补全</li><li>括号匹配</li><li>自动闭合括号</li><li>括号识别</li><li>启动、关闭注释</li><li>自动缩进</li><li>代码折叠</li></ul><p>我们提供了3个指南供你开发语言插件的声明式特性：</p><ul><li><a href="/language-extensions/syntax-highlight-guide">语法高亮指南</a>：VS Code 使用TextMate语法来高亮代码。这个指南将教你用简单的TextMate语法开发一个VS Code插件。</li><li><a href="/language-extensions/snippet-guide">代码片段补全指南</a>： 这个指南教你怎么把代码片段打包进插件中。</li><li><a href="/language-extensions/language-configuration-guide">语言配置指南</a>：VS Code允许插件为任何编程语言定义 <strong>语言配置</strong>。这个文件控制着基本的编辑功能，如开闭注释、括号匹配/识别，和(基础)代码折叠。</li></ul><h2 id="编程式语言特性" tabindex="-1"><a class="header-anchor" href="#编程式语言特性" aria-hidden="true">#</a> 编程式语言特性</h2><hr>',5),M=e("em",null,"语言服务器",-1),V={href:"https://github.com/Microsoft/vscode/tree/master/extensions/typescript-language-features",target:"_blank",rel:"noopener noreferrer"},C=e("code",null,"typescript-language-features",-1),L={href:"https://github.com/Microsoft/TypeScript/wiki/Using-the-Language-Service-API",target:"_blank",rel:"noopener noreferrer"},T={href:"https://code.visualstudio.com/api/references/vscode-api#languages.registerHoverProvider",target:"_blank",rel:"noopener noreferrer"},y={href:"https://code.visualstudio.com/api/references/vscode-api#languages.registerDefinitionProvider",target:"_blank",rel:"noopener noreferrer"},P={href:"https://code.visualstudio.com/api/references/vscode-api#languages.registerDefinitionProvider",target:"_blank",rel:"noopener noreferrer"},w=e("li",null,"错误检查",-1),H=e("li",null,"格式化",-1),I=e("li",null,"重构",-1),N=e("li",null,"代码折叠",-1),B=e("p",null,[t("下面是"),e("a",{href:"/language-extensions/programmatic-language-features"},"编程式语言特性"),t("的完整列表。")],-1),D=e("p",null,[e("img",{src:"https://media.githubusercontent.com/media/Microsoft/vscode-docs/master/api/language-extensions/images/overview/multi-ls.png",alt:"multi-ls"})],-1),E=e("h2",{id:"语言服务器协议-language-server-protocol",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#语言服务器协议-language-server-protocol","aria-hidden":"true"},"#"),t(" 语言服务器协议（Language Server Protocol）")],-1),A=e("hr",null,null,-1),J={href:"https://microsoft.github.io/language-server-protocol/",target:"_blank",rel:"noopener noreferrer"},F=e("a",{href:"/language-extensions/programmatic-language-features"},"编程式语言特性",-1),G={href:"https://microsoft.github.io/language-server-protocol/specification",target:"_blank",rel:"noopener noreferrer"},Q=s('<p>我们提供了一个非常详尽的指南，里面会告诉你怎么实现一个语言服务器插件：</p><ul><li><a href="/language-extensions/language-server-extension-guide">语言服务器插件指南</a></li></ul><p><img src="https://media.githubusercontent.com/media/Microsoft/vscode-docs/master/api/language-extensions/images/overview/multi-editor.png" alt="multi-editor"></p><h2 id="特殊功能" tabindex="-1"><a class="header-anchor" href="#特殊功能" aria-hidden="true">#</a> 特殊功能</h2><hr><h4 id="多目录工作区支持" tabindex="-1"><a class="header-anchor" href="#多目录工作区支持" aria-hidden="true">#</a> 多目录工作区支持</h4>',6),U={href:"https://code.visualstudio.com/docs/editor/multi-root-workspaces",target:"_blank",rel:"noopener noreferrer"},j=e("h4",{id:"嵌入式语言",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#嵌入式语言","aria-hidden":"true"},"#"),t(" 嵌入式语言")],-1),q=e("p",null,"嵌入式语言在web开发中是非常常见的，比如HTML中的CSS/JS，JS/TS中的GraphQL。这个主题探讨了针对嵌入语言实现VS Code语言特性的各种方法。 （译者注：官方可能尚未完成这个部分的文档）",-1);function z(K,O){const o=l("ExternalLinkIcon");return i(),a("div",null,[d,e("p",null,[t("VS Code通过语言插件可以为各式各样的编程语言提供智能的编辑体验。VS Code并不含内置语言支持，不过提供了一整套支持富文本特性的API。 比如，"),e("a",h,[t("HTML"),r(o)]),t("插件是一个可以为VS Code中的HTML文件提供语法高亮的插件。 类似的，当你输入"),u,t("时，智能补全会提示"),g,t("，这是"),e("a",_,[t("Typescript Language Features"),r(o)]),t("插件提供的。")]),p,f,m,e("p",null,[t("定义在配置文件的语言功能称之为"),v,t("，比如，"),e("a",b,[t("html"),r(o)]),t("，"),e("a",x,[t("css"),r(o)]),t("和"),e("a",S,[t("typescript-基础支持"),r(o)]),t("插件都打包在了VS Code中，所以提供了下列声明式语言特性：")]),k,e("p",null,[t("编程式语言特性包括自动补全、错误检查和跳转到定义。这些功能一般通过"),M,t("驱动，这个服务器会分析你的项目，然后提供对应的功能。最好的例子就是打包在VS Code中的"),e("a",V,[C,r(o)]),t("插件，它利用"),e("a",L,[t("TypeScript Language Service"),r(o)]),t("提供了诸如下面罗列的编程式语言特性：")]),e("ul",null,[e("li",null,[t("悬停信息（"),e("a",T,[t("vscode.languages.registerHoverProvider"),r(o)]),t("）")]),e("li",null,[t("自动补全（"),e("a",y,[t("vscode.languages.registerCompletionItemProvider"),r(o)]),t("）")]),e("li",null,[t("转跳到定义（"),e("a",P,[t("vscode.languages.registerDefinitionProvider"),r(o)]),t("）")]),w,H,I,N]),B,D,E,A,e("p",null,[e("a",J,[t("语言服务器协议"),r(o)]),t("将语言服务器（一个静态代码分析工具）和语言客户端（一般就是源代码）之间的通信进行了标准化，这样一来插件开发者就可以只写一次代码分析程序，然后在多个编辑器中重用了。")]),e("p",null,[t("在"),F,t("列表中，你可以找到所有VS Code的语言特性，以及它和"),e("a",G,[t("语言服务器协议规格"),r(o)]),t("之间的映射关系。")]),Q,e("p",null,[t("当用户打开了一个"),e("a",U,[t("多目录工作区"),r(o)]),t("，你可能需要将你的语言服务器插件做相应的调整。这个主题探讨了几种多目录工作区的语言服务器的实现方法。 （译者注：官方可能尚未完成这个部分的文档）")]),j,q])}const X=n(c,[["render",z],["__file","index.html.vue"]]);export{X as default};
