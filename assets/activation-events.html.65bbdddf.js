import{_ as c}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as r,c as l,a as e,b as n,d as a,w as i,e as s,r as t}from"./app.ed9f300c.js";const u={},p=s(`<h1 id="激活事件" tabindex="-1"><a class="header-anchor" href="#激活事件" aria-hidden="true">#</a> 激活事件</h1><p><strong>激活事件</strong>是<code>package.json</code>中<code>activationEvents</code>字段声明的一个JSON对象, 参考<a href="/references/extension-manifest">插件清单</a>. 当<strong>激活事件</strong>触发时, 插件就会被激活. 下面是可用的<strong>激活事件</strong>列表:</p><ul><li><a href="#%E6%BF%80%E6%B4%BB%E4%BA%8B%E4%BB%B6">激活事件</a><ul><li><a href="#onlanguage">onLanguage</a></li><li><a href="#oncommand">onCommand</a></li><li><a href="#ondebug">onDebug</a><ul><li><a href="#ondebuginitialconfigurations">onDebugInitialConfigurations</a></li><li><a href="#ondebugresolve">onDebugResolve</a></li></ul></li><li><a href="#workspacecontains">workspaceContains</a></li><li><a href="#onfilesystem">onFileSystem</a></li><li><a href="#onview">onView</a></li><li><a href="#onuri">onUri</a></li><li><a href="#onwebviewpanel">onWebviewPanel</a></li><li><a href="#oncustomeditor">onCustomEditor</a></li><li><a href="#onauthenticationrequest">onAuthenticationRequest</a></li><li><a href="#onstartupfinished">onStartupFinished</a></li><li><a href="#start-up">*</a></li></ul></li></ul><p><code>package.json</code>的配置项都可以在<a href="/references/extension-manifest">插件清单</a>中找到.</p><h2 id="onlanguage" tabindex="-1"><a class="header-anchor" href="#onlanguage" aria-hidden="true">#</a> onLanguage</h2><hr><p>打开特定语言文件时激活事件和相关插件</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>...
<span class="token property">&quot;activationEvents&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
  <span class="token string">&quot;onLanguage:python&quot;</span>
<span class="token punctuation">]</span>
...
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),v=e("code",null,"onLanguage",-1),g={href:"https://code.visualstudio.com/docs/languages/identifiers",target:"_blank",rel:"noopener noreferrer"},h=s(`<p>也可以添加多种语言:</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token property">&quot;activationEvents&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
  <span class="token string">&quot;onLanguage:json&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;onLanguage:markdown&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;onLanguage:typescript&quot;</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="oncommand" tabindex="-1"><a class="header-anchor" href="#oncommand" aria-hidden="true">#</a> onCommand</h2><hr><p>调用命令时激活</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>...
<span class="token property">&quot;activationEvents&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
  <span class="token string">&quot;onCommand:extension.sayHello&quot;</span>
<span class="token punctuation">]</span>
...
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ondebug" tabindex="-1"><a class="header-anchor" href="#ondebug" aria-hidden="true">#</a> onDebug</h2><hr><p>调试会话(debug session)启动前激活</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>...
<span class="token property">&quot;activationEvents&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
  <span class="token string">&quot;onDebug&quot;</span>
<span class="token punctuation">]</span>
...
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ondebuginitialconfigurations" tabindex="-1"><a class="header-anchor" href="#ondebuginitialconfigurations" aria-hidden="true">#</a> onDebugInitialConfigurations</h3><h3 id="ondebugresolve" tabindex="-1"><a class="header-anchor" href="#ondebugresolve" aria-hidden="true">#</a> onDebugResolve</h3><p>这是两个粒度更细的<code>onDebug</code>激活事件:</p><ul><li><code>DebugConfigurationProvider</code>中的<code>provideDebugConfigurations</code>在<code>onDebugInitialConfigurations</code>之后触发</li><li><code>onDebugResolve:type</code>在<code>DebugConfigurationProvider</code>的<code>resolveDebugConfiguration</code>方法之前触发.</li></ul><p><strong>友情提示</strong>: 如果调试插件比较轻量, 使用<code>onDebug</code>. 相反, 根据<code>DebugConfigurationProvider</code>实现的对应方法（<code>provideDebugConfigurations</code>或<code>resolveDebugConfiguration</code>），使用<code>onDebugInitialConfigurations</code>或<code>onDebugResolve</code>. 参阅<a href="/extension-guides/debugger-extension#using-a-debugconfigurationprovider">使用调试器插件</a>.</p><h2 id="workspacecontains" tabindex="-1"><a class="header-anchor" href="#workspacecontains" aria-hidden="true">#</a> workspaceContains</h2><hr><p>文件夹打开后，且文件夹中至少包含一个符合glob模式的文件时触发.</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token property">&quot;activationEvents&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
  <span class="token string">&quot;workspaceContains:**/.editorconfig&quot;</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="onfilesystem" tabindex="-1"><a class="header-anchor" href="#onfilesystem" aria-hidden="true">#</a> onFileSystem</h2><hr><p>以协议（scheme）打开文件或文件夹时触发. 通常是<code>file</code>-协议，也可以用自定义的文件供应器函数替换掉，比如<code>ftp</code>、<code>ssh</code>.</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>...
<span class="token property">&quot;activationEvents&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
  <span class="token string">&quot;onFileSystem:sftp&quot;</span>
<span class="token punctuation">]</span>
...
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="onview" tabindex="-1"><a class="header-anchor" href="#onview" aria-hidden="true">#</a> onView</h2><hr><p>指定id的视图展开时触发:</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>...
<span class="token property">&quot;activationEvents&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
  <span class="token string">&quot;onView:nodeDependencies&quot;</span>
<span class="token punctuation">]</span>
...
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="onuri" tabindex="-1"><a class="header-anchor" href="#onuri" aria-hidden="true">#</a> onUri</h2><hr><p>插件的系统级URI打开时触发. 这个URI协议需要带上<code>vscode</code>或者 <code>vscode-insiders</code>协议. URI主机名必须是插件的唯一标识，剩余的URI是可选的.</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>...
<span class="token property">&quot;activationEvents&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
  <span class="token string">&quot;onUri&quot;</span>
<span class="token punctuation">]</span>
...
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果<code>vscode.git</code>插件定义了<code>onUri</code>激活事件，那么下列任意URI打开时就会触发:</p><ul><li><code>vscode://vscode.git/init</code></li><li><code>vscode://vscode.git/clone?url=https%3A%2F%2Fgithub.com%2FMicrosoft%2Fvscode-vsce.git</code></li><li><code>vscode-insiders://vscode.git/init</code>(for VS Code Insiders)</li></ul><h2 id="onwebviewpanel" tabindex="-1"><a class="header-anchor" href="#onwebviewpanel" aria-hidden="true">#</a> onWebviewPanel</h2><hr><p>当相应<code>viewType</code>的<code>webview</code>恢复时触发.</p><p>下面是一个例子:</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token property">&quot;activationEvents&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
  ...<span class="token punctuation">,</span>
  <span class="token string">&quot;onWebviewPanel:catCoding&quot;</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VS Code 恢复 (restore) <code>viewType</code> 为 <code>catCoding</code> 的 webview 时会激活插件. 调用 <code>window.createWebviewPanel</code> 可以设置 <code>viewType</code>, 你可能会需要其它的激活事件(比如: <code>onCommand</code>)初始化你的插件，然后再创建<code>webview</code>视图.</p><h2 id="oncustomeditor" tabindex="-1"><a class="header-anchor" href="#oncustomeditor" aria-hidden="true">#</a> onCustomEditor</h2><hr>`,41),m=e("code",null,"viewType",-1),b=s(`<p>下面是一个例子:</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token property">&quot;activationEvents&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;onCustomEditor:catCustoms.pawDraw&quot;</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),k=e("code",null,"viewType",-1),f=e("code",null,"catCustoms.pawDraw",-1),q=e("code",null,"自定义编辑器",-1),w=e("code",null,"viewType",-1),_=e("code",null,"registerCustomEditorProvider",-1),j=s(`<p>!&gt; <strong>注意</strong>: 从VS Code 1.74.0开始，包含自定义编辑器的插件，不再需要单独配置 <code>onCustomEditor</code> 事件来激活.</p><h2 id="onauthenticationrequest" tabindex="-1"><a class="header-anchor" href="#onauthenticationrequest" aria-hidden="true">#</a> onAuthenticationRequest</h2><hr><p>当插件通过 <code>authentication.getSession()</code> API和相应的 <code>providerId</code> 请求认证会话时会激活插件.</p><p>下面是一个例子：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token property">&quot;activationEvents&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;onAuthenticationRequest:github&quot;</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当 VS Code 需要获取类型为 <code>github</code> 的 <code>AuthenticationSession</code> 将激活插件.</p><p>!&gt; <strong>注意</strong>: 从VS Code 1.74.0开始，包含认证程序的插件，不再需要单独配置 <code>onAuthenticationRequest</code> 事件来激活.</p><h2 id="onstartupfinished" tabindex="-1"><a class="header-anchor" href="#onstartupfinished" aria-hidden="true">#</a> onStartupFinished</h2><hr><p>VS Code启动一段时间后才会激活插件. 它类似于 <code>*</code> 类激活事件，但它不会减慢VS Code启动. 目前，该事件在所有 <code>*</code> 类插件激活完成后触发.</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>...
<span class="token property">&quot;activationEvents&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;onStartupFinished&quot;</span>
<span class="token punctuation">]</span>
...
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="start-up" tabindex="-1"><a class="header-anchor" href="#start-up" aria-hidden="true">#</a> Start up</h2><hr><p>当VS Code启动时触发. 为了保证良好的用户体验，只在你的插件没有其他任何激活事件的前提下，添加这个激活事件.</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>...
<span class="token property">&quot;activationEvents&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
  <span class="token string">&quot;*&quot;</span>
<span class="token punctuation">]</span>
...
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>!&gt; <strong>注意</strong>: 一个插件如果侦听了多个激活事件, 那么最好用<code>&quot;*&quot;</code>替换掉.</p><p>!&gt; <strong>注意</strong>: 插件<strong>必须</strong>从它的主模块中输出一个<code>activate()</code>函数，当任意的激活事件触发时，VS Code会<strong>仅仅调用一次这个函数</strong>. 此外，插件也<strong>应该</strong> 导出一个<code>deactivate()</code>函数，当VS Code关闭时执行清理的任务. 如果清理进程是异步的，插件的<code>deactivate()</code><strong>必须</strong>返回一个Promise. 如果这个清理任务是同步的，那么<code>deactivate()</code>可以返回<code>undefined</code>.</p>`,18);function x(C,E){const d=t("ExternalLinkIcon"),o=t("RouterLink");return r(),l("div",null,[p,e("p",null,[v,n("事件需要指定特定的"),e("a",g,[n("语言标识符"),a(d)])]),h,e("p",null,[n("当相应 "),m,n(" 的 "),a(o,{to:"/extension-guides/custom-editors.html"},{default:i(()=>[n("自定义编辑器")]),_:1}),n(" 被创建时触发.")]),b,e("p",null,[n("VS Code 恢复 (restore) "),k,n(" 为 "),f,n(" 的自定义编辑器时会激活插件. 首先通过 "),a(o,{to:"/extension-guides/custom-editors.html#%E5%8F%91%E5%B8%83%E5%86%85%E5%AE%B9%E9%85%8D%E7%BD%AE"},{default:i(()=>[q,n(" 的发布内容配置")]),_:1}),n(" 设置 "),w,n(" ，然后为 "),_,n(" 提供一个 供应器函数.")]),j])}const S=c(u,[["render",x],["__file","activation-events.html.vue"]]);export{S as default};
