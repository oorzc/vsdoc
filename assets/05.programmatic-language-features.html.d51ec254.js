import{_ as o}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as p,c,a as n,b as e,d as a,e as t,r as i}from"./app.ed9f300c.js";const l={},r=n("h1",{id:"程序性语言特性",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#程序性语言特性","aria-hidden":"true"},"#"),e(" 程序性语言特性")],-1),u={href:"https://code.visualstudio.com/api/references/vscode-api#languages",target:"_blank",rel:"noopener noreferrer"},d=n("code",null,"vscode.languages.*",-1),k=n("a",{href:"#%E6%98%BE%E7%A4%BA%E6%82%AC%E6%B5%AE%E6%8F%90%E7%A4%BA"},"悬停提示",-1),v=t(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>vscode<span class="token punctuation">.</span>languages<span class="token punctuation">.</span><span class="token function">registerHoverProvider</span><span class="token punctuation">(</span><span class="token string">&#39;javascript&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
	<span class="token function">provideHover</span><span class="token punctuation">(</span>document<span class="token punctuation">,</span> position<span class="token punctuation">,</span> token<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token punctuation">{</span>
			contents<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;Hover Content&#39;</span><span class="token punctuation">]</span>
		<span class="token punctuation">}</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),m={href:"https://code.visualstudio.com/api/references/vscode-api#languages.registerHoverProvider",target:"_blank",rel:"noopener noreferrer"},g=n("code",null,"vscode.languages.registerHoverProvider",-1),b={href:"https://code.visualstudio.com/api/references/vscode-api#HoverProvider",target:"_blank",rel:"noopener noreferrer"},h=n("code",null,"HoverProvider",-1),f=n("a",{href:"#%E8%AF%AD%E8%A8%80%E5%8A%9F%E8%83%BD%E5%88%97%E8%A1%A8"},"语言功能列表",-1),_={href:"https://microsoft.github.io/language-server-protocol/",target:"_blank",rel:"noopener noreferrer"},x=n("li",null,"一个为JS同时提供语言客户端和语言服务器的插件",-1),y={href:"https://microsoft.github.io/language-server-protocol/",target:"_blank",rel:"noopener noreferrer"},q=n("li",null,"你悬停到JS代码上",-1),w=n("li",null,"VS Code通知语言客户端",-1),P=n("li",null,"语言客户端向语言服务器发起请求，索要悬停的返回结果，最后再送回给VS Code",-1),D=n("li",null,"VS Code将结果展示在悬浮框中",-1),C=n("p",null,"这个过程可能看起来有些复杂，但是这么做主要有两个好处：",-1),T=n("ul",null,[n("li",null,"语言服务器可以用任何语言实现"),n("li",null,"语言服务器可以被多个编辑器重用，提供更加智能的编辑体验")],-1),E=n("p",null,[e("深入指南，请移步至"),n("a",{href:"/language-extensions/language-server-extension-guide"},"语言服务器插件指南")],-1),j=n("h2",{id:"语言功能列表",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#语言功能列表","aria-hidden":"true"},"#"),e(" 语言功能列表")],-1),G=n("hr",null,null,-1),S=n("thead",null,[n("tr",null,[n("th",null,"VS Code API"),n("th",null,"LSP method")])],-1),F={href:"https://code.visualstudio.com/api/references/vscode-api#languages.createDiagnosticCollection",target:"_blank",rel:"noopener noreferrer"},H=n("code",null,"createDiagnosticCollection",-1),O={href:"https://microsoft.github.io/language-server-protocol/specification#textDocument_publishDiagnostics",target:"_blank",rel:"noopener noreferrer"},L={href:"https://code.visualstudio.com/api/references/vscode-api#languages.registerCompletionItemProvider",target:"_blank",rel:"noopener noreferrer"},R=n("code",null,"registerCompletionItemProvider",-1),M={href:"https://microsoft.github.io/language-server-protocol/specification#textDocument_completion",target:"_blank",rel:"noopener noreferrer"},A={href:"https://microsoft.github.io/language-server-protocol/specification#completionItem_resolve",target:"_blank",rel:"noopener noreferrer"},I={href:"https://code.visualstudio.com/api/references/vscode-api#languages.registerHoverProvider",target:"_blank",rel:"noopener noreferrer"},z=n("code",null,"registerHoverProvider",-1),V={href:"https://microsoft.github.io/language-server-protocol/specification#textDocument_hover",target:"_blank",rel:"noopener noreferrer"},B={href:"https://code.visualstudio.com/api/references/vscode-api#languages.registerSignatureHelpProvider",target:"_blank",rel:"noopener noreferrer"},N=n("code",null,"registerSignatureHelpProvider",-1),W={href:"https://microsoft.github.io/language-server-protocol/specification#textDocument_signatureHelp",target:"_blank",rel:"noopener noreferrer"},J={href:"https://code.visualstudio.com/api/references/vscode-api#languages.registerDefinitionProvider",target:"_blank",rel:"noopener noreferrer"},U=n("code",null,"registerDefinitionProvider",-1),K={href:"https://microsoft.github.io/language-server-protocol/specification#textDocument_definition",target:"_blank",rel:"noopener noreferrer"},Q={href:"https://code.visualstudio.com/api/references/vscode-api#languages.registerTypeDefinitionProvider",target:"_blank",rel:"noopener noreferrer"},X=n("code",null,"registerTypeDefinitionProvider",-1),Y={href:"https://microsoft.github.io/language-server-protocol/specification#textDocument_typeDefinition",target:"_blank",rel:"noopener noreferrer"},Z={href:"https://code.visualstudio.com/api/references/vscode-api#languages.registerImplementationProvider",target:"_blank",rel:"noopener noreferrer"},$=n("code",null,"registerImplementationProvider",-1),nn={href:"https://microsoft.github.io/language-server-protocol/specification#textDocument_implementation",target:"_blank",rel:"noopener noreferrer"},sn={href:"https://code.visualstudio.com/api/references/vscode-api#languages.registerReferenceProvider",target:"_blank",rel:"noopener noreferrer"},an=n("code",null,"registerReferenceProvider",-1),en={href:"https://microsoft.github.io/language-server-protocol/specification#textDocument_references",target:"_blank",rel:"noopener noreferrer"},tn={href:"https://code.visualstudio.com/api/references/vscode-api#languages.registerDocumentHighlightProvider",target:"_blank",rel:"noopener noreferrer"},on=n("code",null,"registerDocumentHighlightProvider",-1),pn={href:"https://microsoft.github.io/language-server-protocol/specification#textDocument_documentHighlight",target:"_blank",rel:"noopener noreferrer"},cn={href:"https://code.visualstudio.com/api/references/vscode-api#languages.registerDocumentSymbolProvider",target:"_blank",rel:"noopener noreferrer"},ln=n("code",null,"registerDocumentSymbolProvider",-1),rn={href:"https://microsoft.github.io/language-server-protocol/specification#textDocument_documentSymbol",target:"_blank",rel:"noopener noreferrer"},un={href:"https://code.visualstudio.com/api/references/vscode-api#languages.registerCodeActionsProvider",target:"_blank",rel:"noopener noreferrer"},dn=n("code",null,"registerCodeActionsProvider",-1),kn={href:"https://microsoft.github.io/language-server-protocol/specification#textDocument_codeAction",target:"_blank",rel:"noopener noreferrer"},vn={href:"https://code.visualstudio.com/api/references/vscode-api#languages.registerCodeLensProvider",target:"_blank",rel:"noopener noreferrer"},mn=n("code",null,"registerCodeLensProvider",-1),gn={href:"https://microsoft.github.io/language-server-protocol/specification#textDocument_codeLens",target:"_blank",rel:"noopener noreferrer"},bn={href:"https://microsoft.github.io/language-server-protocol/specification#codeLens_resolve",target:"_blank",rel:"noopener noreferrer"},hn={href:"https://code.visualstudio.com/api/references/vscode-api#languages.registerDocumentLinkProvider",target:"_blank",rel:"noopener noreferrer"},fn=n("code",null,"registerDocumentLinkProvider",-1),_n={href:"https://microsoft.github.io/language-server-protocol/specification#textDocument_documentLink",target:"_blank",rel:"noopener noreferrer"},xn={href:"https://microsoft.github.io/language-server-protocol/specification#documentLink_resolve",target:"_blank",rel:"noopener noreferrer"},yn={href:"https://code.visualstudio.com/api/references/vscode-api#languages.registerDocumentColorProvider",target:"_blank",rel:"noopener noreferrer"},qn=n("code",null,"registerColorProvider",-1),wn={href:"https://microsoft.github.io/language-server-protocol/specification#textDocument_documentColor",target:"_blank",rel:"noopener noreferrer"},Pn={href:"https://microsoft.github.io/language-server-protocol/specification#textDocument_colorPresentation",target:"_blank",rel:"noopener noreferrer"},Dn={href:"https://code.visualstudio.com/api/references/vscode-api#languages.registerDocumentFormattingEditProvider",target:"_blank",rel:"noopener noreferrer"},Cn=n("code",null,"registerDocumentFormattingEditProvider",-1),Tn={href:"https://microsoft.github.io/language-server-protocol/specification#textDocument_formatting",target:"_blank",rel:"noopener noreferrer"},En={href:"https://code.visualstudio.com/api/references/vscode-api#languages.registerDocumentRangeFormattingEditProvider",target:"_blank",rel:"noopener noreferrer"},jn=n("code",null,"registerDocumentRangeFormattingEditProvider",-1),Gn={href:"https://microsoft.github.io/language-server-protocol/specification#textDocument_rangeFormatting",target:"_blank",rel:"noopener noreferrer"},Sn={href:"https://code.visualstudio.com/api/references/vscode-api#languages.registerOnTypeFormattingEditProvider",target:"_blank",rel:"noopener noreferrer"},Fn=n("code",null,"registerOnTypeFormattingEditProvider",-1),Hn={href:"https://microsoft.github.io/language-server-protocol/specification#textDocument_onTypeFormatting",target:"_blank",rel:"noopener noreferrer"},On={href:"https://code.visualstudio.com/api/references/vscode-api#languages.registerRenameProvider",target:"_blank",rel:"noopener noreferrer"},Ln=n("code",null,"registerRenameProvider",-1),Rn={href:"https://microsoft.github.io/language-server-protocol/specification#textDocument_rename",target:"_blank",rel:"noopener noreferrer"},Mn={href:"https://microsoft.github.io/language-server-protocol/specification#textDocument_prepareRename",target:"_blank",rel:"noopener noreferrer"},An={href:"https://code.visualstudio.com/api/references/vscode-api#languages.registerFoldingRangeProvider",target:"_blank",rel:"noopener noreferrer"},In=n("code",null,"registerFoldingRangeProvider",-1),zn={href:"https://microsoft.github.io/language-server-protocol/specification#textDocument_foldingRange",target:"_blank",rel:"noopener noreferrer"},Vn=t(`<h2 id="提供诊断信息" tabindex="-1"><a class="header-anchor" href="#提供诊断信息" aria-hidden="true">#</a> 提供诊断信息</h2><hr><p>诊断信息是提示代码问题的一种方式。</p><p><img src="https://media.githubusercontent.com/media/Microsoft/vscode-docs/master/api/language-extensions/images/language-support/diagnostics.gif" alt="diagnostics"></p><h5 id="语言服务器协议" tabindex="-1"><a class="header-anchor" href="#语言服务器协议" aria-hidden="true">#</a> 语言服务器协议</h5><p>语言服务器需要向客户端发送<code>textDocument/publishDiagnostics</code>信息，这个信息中包含了诊断信息url的数组。</p><p>!&gt; **注意：**客户端不会主动向服务端请求信息，需要服务器将诊断信息推送到客户端。</p><h5 id="直接实现" tabindex="-1"><a class="header-anchor" href="#直接实现" aria-hidden="true">#</a> 直接实现</h5><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">let</span> diagnosticCollection<span class="token operator">:</span> vscode<span class="token punctuation">.</span>DiagnosticCollection<span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">activate</span><span class="token punctuation">(</span>ctx<span class="token operator">:</span> vscode<span class="token punctuation">.</span>ExtensionContext<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>
  ctx<span class="token punctuation">.</span>subscriptions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">getDisposable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  diagnosticCollection <span class="token operator">=</span> vscode<span class="token punctuation">.</span>languages<span class="token punctuation">.</span><span class="token function">createDiagnosticCollection</span><span class="token punctuation">(</span><span class="token string">&#39;go&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  ctx<span class="token punctuation">.</span>subscriptions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>diagnosticCollection<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token operator">...</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">onChange</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> uri <span class="token operator">=</span> document<span class="token punctuation">.</span>uri<span class="token punctuation">;</span>
  <span class="token function">check</span><span class="token punctuation">(</span>uri<span class="token punctuation">.</span>fsPath<span class="token punctuation">,</span> goConfig<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>errors <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    diagnosticCollection<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> diagnosticMap<span class="token operator">:</span> Map<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> vscode<span class="token punctuation">.</span>Diagnostic<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    errors<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>error <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> canonicalFile <span class="token operator">=</span> vscode<span class="token punctuation">.</span>Uri<span class="token punctuation">.</span><span class="token function">file</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>file<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">let</span> range <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">vscode</span><span class="token punctuation">.</span><span class="token function">Range</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>line<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> error<span class="token punctuation">.</span>startColumn<span class="token punctuation">,</span> error<span class="token punctuation">.</span>line<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> error<span class="token punctuation">.</span>endColumn<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">let</span> diagnostics <span class="token operator">=</span> diagnosticMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>canonicalFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>diagnostics<span class="token punctuation">)</span> <span class="token punctuation">{</span> diagnostics <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
      diagnostics<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">vscode</span><span class="token punctuation">.</span><span class="token function">Diagnostic</span><span class="token punctuation">(</span>range<span class="token punctuation">,</span> error<span class="token punctuation">.</span>msg<span class="token punctuation">,</span> error<span class="token punctuation">.</span>severity<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      diagnosticMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>canonicalFile<span class="token punctuation">,</span> diagnostics<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    diagnosticMap<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>diags<span class="token punctuation">,</span> file<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      diagnosticCollection<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>vscode<span class="token punctuation">.</span>Uri<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">,</span> diags<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>基础实现</strong></p><p>只对打开的编辑器提供诊断，保证至少在每次保存文件时诊断一次。诊断信息最好能随编辑器的文档内容变化触发。</p></blockquote><blockquote><p><strong>进阶实现</strong></p><p>不仅仅为打开的编辑器提供诊断，而是诊断当前打开的文件目录中的所有资源，不论文件是被打开还是关闭。</p></blockquote><h2 id="提供补全建议" tabindex="-1"><a class="header-anchor" href="#提供补全建议" aria-hidden="true">#</a> 提供补全建议</h2><hr><p>代码补全可以给用户提供内容感知建议。</p><p><img src="https://media.githubusercontent.com/media/Microsoft/vscode-docs/master/api/language-extensions/images/language-support/code-completion.gif" alt="code-completion"></p><h5 id="语言服务器协议-1" tabindex="-1"><a class="header-anchor" href="#语言服务器协议-1" aria-hidden="true">#</a> 语言服务器协议</h5><p>在接收响应的<code>initialize</code>方法中，你的语言服务器需要声明它是否能提供补全，以及它是否支持动态计算补全项的<code>completionItem\\resolve</code>方法。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    ...
    <span class="token property">&quot;capabilities&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;completionProvider&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;resolveProvider&quot;</span><span class="token operator">:</span> <span class="token string">&quot;true&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;triggerCharacters&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span> &#39;.&#39; <span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
        ...
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="直接实现-1" tabindex="-1"><a class="header-anchor" href="#直接实现-1" aria-hidden="true">#</a> 直接实现</h5><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">GoCompletionItemProvider</span> <span class="token keyword">implements</span> <span class="token class-name">vscode</span><span class="token punctuation">.</span>CompletionItemProvider <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">provideCompletionItems</span><span class="token punctuation">(</span>
        document<span class="token operator">:</span> vscode<span class="token punctuation">.</span>TextDocument<span class="token punctuation">,</span> position<span class="token operator">:</span> vscode<span class="token punctuation">.</span>Position<span class="token punctuation">,</span> token<span class="token operator">:</span> vscode<span class="token punctuation">.</span>CancellationToken<span class="token punctuation">)</span><span class="token operator">:</span>
        Thenable<span class="token operator">&lt;</span>vscode<span class="token punctuation">.</span>CompletionItem<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">activate</span><span class="token punctuation">(</span>ctx<span class="token operator">:</span> vscode<span class="token punctuation">.</span>ExtensionContext<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    ctx<span class="token punctuation">.</span>subscriptions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">getDisposable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ctx<span class="token punctuation">.</span>subscriptions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
        vscode<span class="token punctuation">.</span>languages<span class="token punctuation">.</span><span class="token function">registerCompletionItemProvider</span><span class="token punctuation">(</span>
            <span class="token constant">GO_MODE</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">GoCompletionItemProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;.&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\\&quot;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>基础实现</strong></p><p>不支持本功能</p></blockquote><blockquote><p><strong>进阶实现</strong></p><p>当用户挑选补全项时，动态计算补全项的相关信息，这条信息会浮现在补全项旁边。</p></blockquote><h2 id="显示悬浮提示" tabindex="-1"><a class="header-anchor" href="#显示悬浮提示" aria-hidden="true">#</a> 显示悬浮提示</h2><hr><p>悬浮信息会展示在鼠标光标的下方，为用户提供符号/对象的相关信息，一般展示关于符号的类型和描述。</p><p><img src="https://media.githubusercontent.com/media/Microsoft/vscode-docs/master/api/language-extensions/images/language-support/hovers.gif" alt="hovers"></p><h5 id="语言服务器协议-2" tabindex="-1"><a class="header-anchor" href="#语言服务器协议-2" aria-hidden="true">#</a> 语言服务器协议</h5><p>为了响应请求<code>initialize</code>方法，语言服务器需要声明它能提供这项功能。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    ...
    <span class="token property">&quot;capabilities&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;hoverProvider&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;true&quot;</span><span class="token punctuation">,</span>
        ...
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>另外，你的语言服务器还要能够响应<code>textDocument/hover</code>请求。</p><h5 id="直接实现-2" tabindex="-1"><a class="header-anchor" href="#直接实现-2" aria-hidden="true">#</a> 直接实现</h5><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">GoHoverProvider</span> <span class="token keyword">implements</span> <span class="token class-name">HoverProvider</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">provideHover</span><span class="token punctuation">(</span>
        document<span class="token operator">:</span> TextDocument<span class="token punctuation">,</span> position<span class="token operator">:</span> Position<span class="token punctuation">,</span> token<span class="token operator">:</span> CancellationToken<span class="token punctuation">)</span><span class="token operator">:</span>
        Thenable<span class="token operator">&lt;</span>Hover<span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">activate</span><span class="token punctuation">(</span>ctx<span class="token operator">:</span> vscode<span class="token punctuation">.</span>ExtensionContext<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    ctx<span class="token punctuation">.</span>subscriptions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
        vscode<span class="token punctuation">.</span>languages<span class="token punctuation">.</span><span class="token function">registerHoverProvider</span><span class="token punctuation">(</span>
            <span class="token constant">GO_MODE</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">GoHoverProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>基础实现</strong> 显示符号的类型和相关文档描述。</p></blockquote><blockquote><p><strong>进阶实现</strong> 对方法名进行着色，就像你的源码一样</p></blockquote><h2 id="函数和方法签名" tabindex="-1"><a class="header-anchor" href="#函数和方法签名" aria-hidden="true">#</a> 函数和方法签名</h2><hr><p>当用户输入函数和方法时，显示调用该方法的相关信息。</p><p><img src="https://media.githubusercontent.com/media/Microsoft/vscode-docs/master/api/language-extensions/images/language-support/signature-help.gif" alt="signature-help"></p><h5 id="语言服务器协议-3" tabindex="-1"><a class="header-anchor" href="#语言服务器协议-3" aria-hidden="true">#</a> 语言服务器协议</h5><p>为了响应请求<code>initialize</code>方法，语言服务器需要声明它能提供这项功能。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    ...
    <span class="token property">&quot;capabilities&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;signatureHelpProvider&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;triggerCharacters&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span> &#39;(&#39; <span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
        ...
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>另外，你的语言服务器还要能够响应<code>textDocument/signatureHelp</code>请求。</p><h5 id="直接实现-3" tabindex="-1"><a class="header-anchor" href="#直接实现-3" aria-hidden="true">#</a> 直接实现</h5><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">GoSignatureHelpProvider</span> <span class="token keyword">implements</span> <span class="token class-name">SignatureHelpProvider</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">provideSignatureHelp</span><span class="token punctuation">(</span>
        document<span class="token operator">:</span> TextDocument<span class="token punctuation">,</span> position<span class="token operator">:</span> Position<span class="token punctuation">,</span> token<span class="token operator">:</span> CancellationToken<span class="token punctuation">)</span><span class="token operator">:</span>
        <span class="token builtin">Promise</span><span class="token operator">&lt;</span>SignatureHelp<span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">activate</span><span class="token punctuation">(</span>ctx<span class="token operator">:</span> vscode<span class="token punctuation">.</span>ExtensionContext<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    ctx<span class="token punctuation">.</span>subscriptions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
        vscode<span class="token punctuation">.</span>languages<span class="token punctuation">.</span><span class="token function">registerSignatureHelpProvider</span><span class="token punctuation">(</span>
            <span class="token constant">GO_MODE</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">GoSignatureHelpProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;(&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>基础实现</strong></p><p>签名帮助需要包含参数的相关文档。</p></blockquote><blockquote><p><strong>进阶实现</strong></p><p>无</p></blockquote><h2 id="符号定义" tabindex="-1"><a class="header-anchor" href="#符号定义" aria-hidden="true">#</a> 符号定义</h2><hr><p>允许用户查看变量/函数/方法的定义。</p><p><img src="https://media.githubusercontent.com/media/Microsoft/vscode-docs/master/api/language-extensions/images/language-support/goto-definition.gif" alt="goto-definition"></p><h5 id="语言服务器协议-4" tabindex="-1"><a class="header-anchor" href="#语言服务器协议-4" aria-hidden="true">#</a> 语言服务器协议</h5><p>为了响应请求<code>initialize</code>方法，语言服务器需要声明它能提供这项功能。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    ...
    <span class="token property">&quot;capabilities&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;definitionProvider&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;true&quot;</span>
        ...
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>另外，你的语言服务器还要能够响应<code>textDocument/definition</code>请求。</p><h5 id="直接实现-4" tabindex="-1"><a class="header-anchor" href="#直接实现-4" aria-hidden="true">#</a> 直接实现</h5><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>lass GoDefinitionProvider <span class="token keyword">implements</span> <span class="token class-name">vscode</span><span class="token punctuation">.</span>DefinitionProvider <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">provideDefinition</span><span class="token punctuation">(</span>
        document<span class="token operator">:</span> vscode<span class="token punctuation">.</span>TextDocument<span class="token punctuation">,</span> position<span class="token operator">:</span> vscode<span class="token punctuation">.</span>Position<span class="token punctuation">,</span> token<span class="token operator">:</span> vscode<span class="token punctuation">.</span>CancellationToken<span class="token punctuation">)</span><span class="token operator">:</span>
        Thenable<span class="token operator">&lt;</span>vscode<span class="token punctuation">.</span>Location<span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">activate</span><span class="token punctuation">(</span>ctx<span class="token operator">:</span> vscode<span class="token punctuation">.</span>ExtensionContext<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    ctx<span class="token punctuation">.</span>subscriptions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
        vscode<span class="token punctuation">.</span>languages<span class="token punctuation">.</span><span class="token function">registerDefinitionProvider</span><span class="token punctuation">(</span>
            <span class="token constant">GO_MODE</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">GoDefinitionProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>基础实现</strong></p><p>如果符号有多个定义，你可以显示多条定义。</p></blockquote><blockquote><p><strong>进阶实现</strong></p><p>无</p></blockquote><h2 id="查找符号的全部引用" tabindex="-1"><a class="header-anchor" href="#查找符号的全部引用" aria-hidden="true">#</a> 查找符号的全部引用</h2><hr><p>允许用户在当前编辑器直接查看变量/函数/方法的定义的源代码。</p><p><img src="https://media.githubusercontent.com/media/Microsoft/vscode-docs/master/api/language-extensions/images/language-support/find-references.gif" alt="find-references"></p><h5 id="语言服务器协议-5" tabindex="-1"><a class="header-anchor" href="#语言服务器协议-5" aria-hidden="true">#</a> 语言服务器协议</h5><p>为了响应请求<code>initialize</code>方法，语言服务器需要声明它能提供这项功能。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    ...
    <span class="token property">&quot;capabilities&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;referencesProvider&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;true&quot;</span>
        ...
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>另外，你的语言服务器还要能够响应<code>textDocument/references</code>请求。</p><h5 id="直接实现-5" tabindex="-1"><a class="header-anchor" href="#直接实现-5" aria-hidden="true">#</a> 直接实现</h5><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">GoReferenceProvider</span> <span class="token keyword">implements</span> <span class="token class-name">vscode</span><span class="token punctuation">.</span>ReferenceProvider <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">provideReferences</span><span class="token punctuation">(</span>
        document<span class="token operator">:</span> vscode<span class="token punctuation">.</span>TextDocument<span class="token punctuation">,</span> position<span class="token operator">:</span> vscode<span class="token punctuation">.</span>Position<span class="token punctuation">,</span>
        options<span class="token operator">:</span> <span class="token punctuation">{</span> includeDeclaration<span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> token<span class="token operator">:</span> vscode<span class="token punctuation">.</span>CancellationToken<span class="token punctuation">)</span><span class="token operator">:</span>
        Thenable<span class="token operator">&lt;</span>vscode<span class="token punctuation">.</span>Location<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">activate</span><span class="token punctuation">(</span>ctx<span class="token operator">:</span> vscode<span class="token punctuation">.</span>ExtensionContext<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    ctx<span class="token punctuation">.</span>subscriptions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
        vscode<span class="token punctuation">.</span>languages<span class="token punctuation">.</span><span class="token function">registerReferenceProvider</span><span class="token punctuation">(</span>
            <span class="token constant">GO_MODE</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">GoReferenceProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>基础实现</strong></p><p>为所有引用返回引用位置（资源的url和范围）</p></blockquote><blockquote><p><strong>进阶实现</strong></p><p>无</p></blockquote><h2 id="高亮匹配符号" tabindex="-1"><a class="header-anchor" href="#高亮匹配符号" aria-hidden="true">#</a> 高亮匹配符号</h2><hr><p>允许用户在打开的编辑器中查看某个符号的全部匹配项。</p><p><img src="https://media.githubusercontent.com/media/Microsoft/vscode-docs/master/api/language-extensions/images/language-support/document-highlights.gif" alt="document-highlights"></p><h5 id="语言服务器协议-6" tabindex="-1"><a class="header-anchor" href="#语言服务器协议-6" aria-hidden="true">#</a> 语言服务器协议</h5><p>为了响应请求<code>initialize</code>方法，语言服务器需要声明它能提供这项功能。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    ...
    <span class="token property">&quot;capabilities&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;documentHighlightProvider&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;true&quot;</span>
        ...
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>另外，你的语言服务器还要能够响应<code>textDocument/documentHighlight</code>请求。</p><h5 id="直接实现-6" tabindex="-1"><a class="header-anchor" href="#直接实现-6" aria-hidden="true">#</a> 直接实现</h5><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">GoDocumentHighlightProvider</span> <span class="token keyword">implements</span> <span class="token class-name">vscode</span><span class="token punctuation">.</span>DocumentHighlightProvider <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">provideDocumentHighlights</span><span class="token punctuation">(</span>
        document<span class="token operator">:</span> vscode<span class="token punctuation">.</span>TextDocument<span class="token punctuation">,</span> position<span class="token operator">:</span> vscode<span class="token punctuation">.</span>Position<span class="token punctuation">,</span> token<span class="token operator">:</span> vscode<span class="token punctuation">.</span>CancellationToken<span class="token punctuation">)</span><span class="token operator">:</span>
        vscode<span class="token punctuation">.</span>DocumentHighlight<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">|</span> Thenable<span class="token operator">&lt;</span>vscode<span class="token punctuation">.</span>DocumentHighlight<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
    <span class="token operator">...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">activate</span><span class="token punctuation">(</span>ctx<span class="token operator">:</span> vscode<span class="token punctuation">.</span>ExtensionContext<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    ctx<span class="token punctuation">.</span>subscriptions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
        vscode<span class="token punctuation">.</span>languages<span class="token punctuation">.</span><span class="token function">registerDocumentHighlightProvider</span><span class="token punctuation">(</span>
            <span class="token constant">GO_MODE</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">GoDocumentHighlightProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>基础实现</strong></p><p>返回引用文档</p></blockquote><blockquote><p><strong>进阶实现</strong></p><p>无</p></blockquote><h2 id="显示当前文档中的符号定义" tabindex="-1"><a class="header-anchor" href="#显示当前文档中的符号定义" aria-hidden="true">#</a> 显示当前文档中的符号定义</h2><hr><p>允许用户在打开的编辑器中快速跳转到任何符号定义。</p><p><img src="https://media.githubusercontent.com/media/Microsoft/vscode-docs/master/api/language-extensions/images/language-support/document-symbols.gif" alt="document-symbols"></p><h5 id="语言服务器协议-7" tabindex="-1"><a class="header-anchor" href="#语言服务器协议-7" aria-hidden="true">#</a> 语言服务器协议</h5><p>为了响应请求<code>initialize</code>方法，语言服务器需要声明它能提供这项功能。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    ...
    <span class="token property">&quot;capabilities&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;documentSymbolProvider&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;true&quot;</span>
        ...
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>另外，你的语言服务器还要能够响应<code>textDocument/documentSymbol</code>请求。</p><h5 id="直接实现-7" tabindex="-1"><a class="header-anchor" href="#直接实现-7" aria-hidden="true">#</a> 直接实现</h5><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">GoDocumentSymbolProvider</span> <span class="token keyword">implements</span> <span class="token class-name">vscode</span><span class="token punctuation">.</span>DocumentSymbolProvider <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">provideDocumentSymbols</span><span class="token punctuation">(</span>
        document<span class="token operator">:</span> vscode<span class="token punctuation">.</span>TextDocument<span class="token punctuation">,</span> token<span class="token operator">:</span> vscode<span class="token punctuation">.</span>CancellationToken<span class="token punctuation">)</span><span class="token operator">:</span>
        Thenable<span class="token operator">&lt;</span>vscode<span class="token punctuation">.</span>SymbolInformation<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">activate</span><span class="token punctuation">(</span>ctx<span class="token operator">:</span> vscode<span class="token punctuation">.</span>ExtensionContext<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    ctx<span class="token punctuation">.</span>subscriptions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
        vscode<span class="token punctuation">.</span>languages<span class="token punctuation">.</span><span class="token function">registerDocumentSymbolProvider</span><span class="token punctuation">(</span>
            <span class="token constant">GO_MODE</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">GoDocumentSymbolProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>基础实现</strong></p><p>返回文档中的所有符号。将符号分类，如变量、函数、类、方法等。</p></blockquote><blockquote><p><strong>进阶实现</strong></p><p>无</p></blockquote><h2 id="显示文件夹中的符号定义" tabindex="-1"><a class="header-anchor" href="#显示文件夹中的符号定义" aria-hidden="true">#</a> 显示文件夹中的符号定义</h2><hr><p>允许用户在打开的文件夹（工作区）中快速跳转到任何符号定义。</p><p><img src="https://media.githubusercontent.com/media/Microsoft/vscode-docs/master/api/language-extensions/images/language-support/workspace-symbols.gif" alt="workspace-symbols"></p><h5 id="语言服务器协议-8" tabindex="-1"><a class="header-anchor" href="#语言服务器协议-8" aria-hidden="true">#</a> 语言服务器协议</h5><p>为了响应请求<code>initialize</code>方法，语言服务器需要声明它能提供这项功能。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    ...
    <span class="token property">&quot;capabilities&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;workspaceSymbolProvider&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;true&quot;</span>
        ...
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>另外，你的语言服务器还要能够响应<code>workspace/symbol</code>请求。</p><h5 id="直接实现-8" tabindex="-1"><a class="header-anchor" href="#直接实现-8" aria-hidden="true">#</a> 直接实现</h5><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">GoWorkspaceSymbolProvider</span> <span class="token keyword">implements</span> <span class="token class-name">vscode</span><span class="token punctuation">.</span>WorkspaceSymbolProvider <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">provideWorkspaceSymbols</span><span class="token punctuation">(</span>
        query<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> token<span class="token operator">:</span> vscode<span class="token punctuation">.</span>CancellationToken<span class="token punctuation">)</span><span class="token operator">:</span>
        Thenable<span class="token operator">&lt;</span>vscode<span class="token punctuation">.</span>SymbolInformation<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">activate</span><span class="token punctuation">(</span>ctx<span class="token operator">:</span> vscode<span class="token punctuation">.</span>ExtensionContext<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    ctx<span class="token punctuation">.</span>subscriptions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
        vscode<span class="token punctuation">.</span>languages<span class="token punctuation">.</span><span class="token function">registerWorkspaceSymbolProvider</span><span class="token punctuation">(</span>
            <span class="token keyword">new</span> <span class="token class-name">GoWorkspaceSymbolProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>基础实现</strong></p><p>返回文件夹中所有匹配的符号。将符号分类，如变量、函数、类、方法等。</p></blockquote><blockquote><p><strong>进阶实现</strong></p><p>无</p></blockquote><h2 id="处理错误和警告" tabindex="-1"><a class="header-anchor" href="#处理错误和警告" aria-hidden="true">#</a> 处理错误和警告</h2><hr><p>为用户提供处理错误和警告的办法。如果有更正操作可用，就会在那个错误边上显示一个小灯泡。当用户点击灯泡的时候，会显示出操作列表。</p><p><img src="https://media.githubusercontent.com/media/Microsoft/vscode-docs/master/api/language-extensions/images/language-support/quick-fixes.gif" alt="quick-fixes"></p><h5 id="语言服务器协议-9" tabindex="-1"><a class="header-anchor" href="#语言服务器协议-9" aria-hidden="true">#</a> 语言服务器协议</h5><p>为了响应请求<code>initialize</code>方法，语言服务器需要声明它能提供这项功能。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    ...
    <span class="token property">&quot;capabilities&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;codeActionProvider&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;true&quot;</span>
        ...
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>另外，你的语言服务器还要能够响应<code>textDocument/codeAction</code>请求。</p><h5 id="直接实现-9" tabindex="-1"><a class="header-anchor" href="#直接实现-9" aria-hidden="true">#</a> 直接实现</h5><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">GoCodeActionProvider</span> <span class="token keyword">implements</span> <span class="token class-name">vscode</span><span class="token punctuation">.</span>CodeActionProvider <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">provideCodeActions</span><span class="token punctuation">(</span>
        document<span class="token operator">:</span> vscode<span class="token punctuation">.</span>TextDocument<span class="token punctuation">,</span> range<span class="token operator">:</span> vscode<span class="token punctuation">.</span>Range<span class="token punctuation">,</span>
        context<span class="token operator">:</span> vscode<span class="token punctuation">.</span>CodeActionContext<span class="token punctuation">,</span> token<span class="token operator">:</span> vscode<span class="token punctuation">.</span>CancellationToken<span class="token punctuation">)</span><span class="token operator">:</span>
        Thenable<span class="token operator">&lt;</span>vscode<span class="token punctuation">.</span>Command<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">activate</span><span class="token punctuation">(</span>ctx<span class="token operator">:</span> vscode<span class="token punctuation">.</span>ExtensionContext<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    ctx<span class="token punctuation">.</span>subscriptions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
        vscode<span class="token punctuation">.</span>languages<span class="token punctuation">.</span><span class="token function">registerCodeActionsProvider</span><span class="token punctuation">(</span>
            <span class="token constant">GO_MODE</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">GoCodeActionProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>基础实现</strong></p><p>为错误/警告提供更正操作。</p></blockquote><blockquote><p><strong>进阶实现</strong></p><p>提供源码级别的操作，如重构、提取方法等。</p></blockquote><h2 id="codelens-为源代码提供更多操作" tabindex="-1"><a class="header-anchor" href="#codelens-为源代码提供更多操作" aria-hidden="true">#</a> CodeLens - 为源代码提供更多操作</h2><hr><p>为用户弹出一个可以操作、包含上下文信息的分隔弹出框。</p><p><img src="https://media.githubusercontent.com/media/Microsoft/vscode-docs/master/api/language-extensions/images/language-support/code-lens.gif" alt="code-lens"></p><h5 id="语言服务器协议-10" tabindex="-1"><a class="header-anchor" href="#语言服务器协议-10" aria-hidden="true">#</a> 语言服务器协议</h5><p>为了响应请求<code>initialize</code>方法，语言服务器需要声明它能提供这项功能，以及它是否支持将<code>codeLens\\resolve</code>方法绑定到CodeLens的命令上。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    ...
    <span class="token property">&quot;capabilities&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;codeLensProvider&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;resolveProvider&quot;</span><span class="token operator">:</span> <span class="token string">&quot;true&quot;</span>
        <span class="token punctuation">}</span>
        ...
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>另外，你的语言服务器还要能够响应<code>textDocument/codeLens</code>请求。</p><h5 id="直接实现-10" tabindex="-1"><a class="header-anchor" href="#直接实现-10" aria-hidden="true">#</a> 直接实现</h5><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">GoCodeLensProvider</span> <span class="token keyword">implements</span> <span class="token class-name">vscode</span><span class="token punctuation">.</span>CodeLensProvider <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">provideCodeLenses</span><span class="token punctuation">(</span>document<span class="token operator">:</span> TextDocument<span class="token punctuation">,</span> token<span class="token operator">:</span> CancellationToken<span class="token punctuation">)</span><span class="token operator">:</span>
        CodeLens<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">|</span> Thenable<span class="token operator">&lt;</span>CodeLens<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> resolveCodeLens<span class="token operator">?</span><span class="token punctuation">(</span>codeLens<span class="token operator">:</span> CodeLens<span class="token punctuation">,</span> token<span class="token operator">:</span> CancellationToken<span class="token punctuation">)</span><span class="token operator">:</span>
         CodeLens <span class="token operator">|</span> Thenable<span class="token operator">&lt;</span>CodeLens<span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">activate</span><span class="token punctuation">(</span>ctx<span class="token operator">:</span> vscode<span class="token punctuation">.</span>ExtensionContext<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    ctx<span class="token punctuation">.</span>subscriptions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
        vscode<span class="token punctuation">.</span>languages<span class="token punctuation">.</span><span class="token function">registerCodeLensProvider</span><span class="token punctuation">(</span>
            <span class="token constant">GO_MODE</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">GoCodeLensProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>基础实现</strong></p><p>为文档提供CodeLens结果。</p></blockquote><blockquote><p><strong>进阶实现</strong></p><p>将Codelens结果绑定到响应<code>codeLens/resolve</code>的命令上。</p></blockquote><h2 id="颜色拾取器" tabindex="-1"><a class="header-anchor" href="#颜色拾取器" aria-hidden="true">#</a> 颜色拾取器</h2><hr><p>允许用户在文件中预览和修改颜色。</p><p><img src="https://media.githubusercontent.com/media/Microsoft/vscode-docs/master/api/language-extensions/images/language-support/color-decorators.png" alt="color-decorators"></p><h5 id="语言服务器协议-11" tabindex="-1"><a class="header-anchor" href="#语言服务器协议-11" aria-hidden="true">#</a> 语言服务器协议</h5><p>为了响应请求<code>initialize</code>方法，语言服务器需要声明它能提供这项功能。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    ...
    <span class="token property">&quot;capabilities&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;colorProvider&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;true&quot;</span>
        ...
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>另外，你的语言服务器还要能够响应<code>textDocument/documentColor</code>和<code>textDocument/colorPresentation</code>请求。</p><h5 id="直接实现-11" tabindex="-1"><a class="header-anchor" href="#直接实现-11" aria-hidden="true">#</a> 直接实现</h5><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">GoColorProvider</span> <span class="token keyword">implements</span> <span class="token class-name">vscode</span><span class="token punctuation">.</span>DocumentColorProvider <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">provideDocumentColors</span><span class="token punctuation">(</span>
        document<span class="token operator">:</span> vscode<span class="token punctuation">.</span>TextDocument<span class="token punctuation">,</span> token<span class="token operator">:</span> vscode<span class="token punctuation">.</span>CancellationToken<span class="token punctuation">)</span><span class="token operator">:</span>
        Thenable<span class="token operator">&lt;</span>vscode<span class="token punctuation">.</span>ColorInformation<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token function">provideColorPresentations</span><span class="token punctuation">(</span>
        color<span class="token operator">:</span> Color<span class="token punctuation">,</span> context<span class="token operator">:</span> <span class="token punctuation">{</span> document<span class="token operator">:</span> TextDocument<span class="token punctuation">,</span> range<span class="token operator">:</span> Range <span class="token punctuation">}</span><span class="token punctuation">,</span> token<span class="token operator">:</span> vscode<span class="token punctuation">.</span>CancellationToken<span class="token punctuation">)</span><span class="token operator">:</span>
        Thenable<span class="token operator">&lt;</span>vscode<span class="token punctuation">.</span>ColorPresentation<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">activate</span><span class="token punctuation">(</span>ctx<span class="token operator">:</span> vscode<span class="token punctuation">.</span>ExtensionContext<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    ctx<span class="token punctuation">.</span>subscriptions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
        vscode<span class="token punctuation">.</span>languages<span class="token punctuation">.</span><span class="token function">registerColorProvider</span><span class="token punctuation">(</span>
            <span class="token constant">GO_MODE</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">GoColorProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>基础实现</strong></p><p>返回文档中的全部颜色引用。在颜色面板岁支持色彩格式（如rgb(...)，hsl(...)）</p></blockquote><blockquote><p><strong>进阶实现</strong></p><p>无</p></blockquote><h2 id="格式化代码" tabindex="-1"><a class="header-anchor" href="#格式化代码" aria-hidden="true">#</a> 格式化代码</h2><hr><p>提供整个文档的代码格式化支持。</p><p><img src="https://media.githubusercontent.com/media/Microsoft/vscode-docs/master/api/language-extensions/images/language-support/format-document.gif" alt="format-document"></p><h5 id="语言服务器协议-12" tabindex="-1"><a class="header-anchor" href="#语言服务器协议-12" aria-hidden="true">#</a> 语言服务器协议</h5><p>为了响应请求<code>initialize</code>方法，语言服务器需要声明它能提供这项功能。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    ...
    <span class="token property">&quot;capabilities&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;documentFormattingProvider&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;true&quot;</span>
        ...
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>另外，你的语言服务器还要能够响应<code>textDocument/formatting</code>请求。</p><h5 id="直接实现-12" tabindex="-1"><a class="header-anchor" href="#直接实现-12" aria-hidden="true">#</a> 直接实现</h5><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">GoDocumentFormatter</span> <span class="token keyword">implements</span> <span class="token class-name">vscode</span><span class="token punctuation">.</span>DocumentFormattingEditProvider <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">formatDocument</span><span class="token punctuation">(</span>document<span class="token operator">:</span> vscode<span class="token punctuation">.</span>TextDocument<span class="token punctuation">)</span><span class="token operator">:</span>
        Thenable<span class="token operator">&lt;</span>vscode<span class="token punctuation">.</span>TextEdit<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">activate</span><span class="token punctuation">(</span>ctx<span class="token operator">:</span> vscode<span class="token punctuation">.</span>ExtensionContext<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    ctx<span class="token punctuation">.</span>subscriptions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
        vscode<span class="token punctuation">.</span>languages<span class="token punctuation">.</span><span class="token function">registerDocumentFormattingEditProvider</span><span class="token punctuation">(</span>
            <span class="token constant">GO_MODE</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">GoDocumentFormatter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>基础实现</strong></p><p>不提供格式化支持</p></blockquote><blockquote><p><strong>进阶实现</strong></p><p>你应该尽量减少代码格式化的影响。稍有不慎，诊断功能就可能失效。</p></blockquote><h2 id="格式化选中区域" tabindex="-1"><a class="header-anchor" href="#格式化选中区域" aria-hidden="true">#</a> 格式化选中区域</h2><hr><p>为用户选中区域提供代码格式化支持。</p><p><img src="https://media.githubusercontent.com/media/Microsoft/vscode-docs/master/api/language-extensions/images/language-support/format-document-range.gif" alt="format-document-range"></p><h5 id="语言服务器协议-13" tabindex="-1"><a class="header-anchor" href="#语言服务器协议-13" aria-hidden="true">#</a> 语言服务器协议</h5><p>为了响应请求<code>initialize</code>方法，语言服务器需要声明它能提供这项功能。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    ...
    <span class="token property">&quot;capabilities&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;documentRangeFormattingProvider&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;true&quot;</span>
        ...
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>另外，你的语言服务器还要能够响应<code>textDocument/rangeFormatting</code>请求。</p><h5 id="直接实现-13" tabindex="-1"><a class="header-anchor" href="#直接实现-13" aria-hidden="true">#</a> 直接实现</h5><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">GoDocumentRangeFormatter</span> <span class="token keyword">implements</span> <span class="token class-name">vscode</span><span class="token punctuation">.</span>DocumentRangeFormattingEditProvider<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">provideDocumentRangeFormattingEdits</span><span class="token punctuation">(</span>
        document<span class="token operator">:</span> vscode<span class="token punctuation">.</span>TextDocument<span class="token punctuation">,</span> range<span class="token operator">:</span> vscode<span class="token punctuation">.</span>Range<span class="token punctuation">,</span>
        options<span class="token operator">:</span> vscode<span class="token punctuation">.</span>FormattingOptions<span class="token punctuation">,</span> token<span class="token operator">:</span> vscode<span class="token punctuation">.</span>CancellationToken<span class="token punctuation">)</span><span class="token operator">:</span>
        Thenable<span class="token operator">&lt;</span>vscode<span class="token punctuation">.</span>TextEdit<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
    <span class="token operator">...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">activate</span><span class="token punctuation">(</span>ctx<span class="token operator">:</span> vscode<span class="token punctuation">.</span>ExtensionContext<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    ctx<span class="token punctuation">.</span>subscriptions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
        vscode<span class="token punctuation">.</span>languages<span class="token punctuation">.</span><span class="token function">registerDocumentRangeFormattingEditProvider</span><span class="token punctuation">(</span>
            <span class="token constant">GO_MODE</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">GoDocumentRangeFormatter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>基础实现</strong></p><p>不提供格式化支持</p></blockquote><blockquote><p><strong>进阶实现</strong></p><p>你应该尽量减少代码格式化的影响。稍有不慎，诊断功能就可能失效。</p></blockquote><h2 id="随用户输入格式化代码" tabindex="-1"><a class="header-anchor" href="#随用户输入格式化代码" aria-hidden="true">#</a> 随用户输入格式化代码</h2><hr><p>支持用户输入时动态调整文本格式。</p>`,169),Bn={href:"https://code.visualstudio.com/docs/getstarted/settings",target:"_blank",rel:"noopener noreferrer"},Nn=n("code",null,"editor.formatOnType",-1),Wn=t(`<p><img src="https://media.githubusercontent.com/media/Microsoft/vscode-docs/master/api/language-extensions/images/language-support/format-on-type.gif" alt="format-on-type"></p><h5 id="语言服务器协议-14" tabindex="-1"><a class="header-anchor" href="#语言服务器协议-14" aria-hidden="true">#</a> 语言服务器协议</h5><p>为了响应请求<code>initialize</code>方法，语言服务器需要声明它能提供这项功能。服务器还得告诉客户端哪些字符需要被格式化，<code>moreTriggerCharacters</code>是可选的。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    ...
    <span class="token property">&quot;capabilities&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;documentOnTypeFormattingProvider&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;firstTriggerCharacter&quot;</span><span class="token operator">:</span> <span class="token string">&quot;}&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;moreTriggerCharacter&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;,&quot;</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
        ...
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>另外，你的语言服务器还要能够响应<code>textDocument/onTypeFormatting</code>请求。</p><h5 id="直接实现-14" tabindex="-1"><a class="header-anchor" href="#直接实现-14" aria-hidden="true">#</a> 直接实现</h5><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">GoOnTypingFormatter</span> <span class="token keyword">implements</span> <span class="token class-name">vscode</span><span class="token punctuation">.</span>OnTypeFormattingEditProvider<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">provideOnTypeFormattingEdits</span><span class="token punctuation">(</span>
        document<span class="token operator">:</span> vscode<span class="token punctuation">.</span>TextDocument<span class="token punctuation">,</span> position<span class="token operator">:</span> vscode<span class="token punctuation">.</span>Position<span class="token punctuation">,</span>
        ch<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> options<span class="token operator">:</span> vscode<span class="token punctuation">.</span>FormattingOptions<span class="token punctuation">,</span> token<span class="token operator">:</span> vscode<span class="token punctuation">.</span>CancellationToken<span class="token punctuation">)</span><span class="token operator">:</span>
        Thenable<span class="token operator">&lt;</span>vscode<span class="token punctuation">.</span>TextEdit<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
    <span class="token operator">...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">activate</span><span class="token punctuation">(</span>ctx<span class="token operator">:</span> vscode<span class="token punctuation">.</span>ExtensionContext<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    ctx<span class="token punctuation">.</span>subscriptions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
        vscode<span class="token punctuation">.</span>languages<span class="token punctuation">.</span><span class="token function">registerOnTypeFormattingEditProvider</span><span class="token punctuation">(</span>
            <span class="token constant">GO_MODE</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">GoOnTypingFormatter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>基础实现</strong></p><p>不提供格式化支持</p></blockquote><blockquote><p><strong>进阶实现</strong></p><p>你应该尽量减少代码格式化的影响。稍有不慎，诊断功能就可能失效。</p></blockquote><h2 id="重命名符号" tabindex="-1"><a class="header-anchor" href="#重命名符号" aria-hidden="true">#</a> 重命名符号</h2><hr><p>允许用户重命名符号，并更新对应符号的全部引用。</p><p><img src="https://media.githubusercontent.com/media/Microsoft/vscode-docs/master/api/language-extensions/images/language-support/rename.gif" alt="rename"></p><h5 id="语言服务器协议-15" tabindex="-1"><a class="header-anchor" href="#语言服务器协议-15" aria-hidden="true">#</a> 语言服务器协议</h5><p>为了响应请求<code>initialize</code>方法，语言服务器需要声明它能提供这项功能。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    ...
    <span class="token property">&quot;capabilities&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;renameProvider&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;true&quot;</span>
        ...
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>另外，你的语言服务器还要能够响应<code>textDocument/rename</code>请求。</p><h5 id="直接实现-15" tabindex="-1"><a class="header-anchor" href="#直接实现-15" aria-hidden="true">#</a> 直接实现</h5><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">GoRenameProvider</span> <span class="token keyword">implements</span> <span class="token class-name">vscode</span><span class="token punctuation">.</span>RenameProvider <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">provideRenameEdits</span><span class="token punctuation">(</span>
        document<span class="token operator">:</span> vscode<span class="token punctuation">.</span>TextDocument<span class="token punctuation">,</span> position<span class="token operator">:</span> vscode<span class="token punctuation">.</span>Position<span class="token punctuation">,</span>
        newName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> token<span class="token operator">:</span> vscode<span class="token punctuation">.</span>CancellationToken<span class="token punctuation">)</span><span class="token operator">:</span>
        Thenable<span class="token operator">&lt;</span>vscode<span class="token punctuation">.</span>WorkspaceEdit<span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">activate</span><span class="token punctuation">(</span>ctx<span class="token operator">:</span> vscode<span class="token punctuation">.</span>ExtensionContext<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    ctx<span class="token punctuation">.</span>subscriptions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
        vscode<span class="token punctuation">.</span>languages<span class="token punctuation">.</span><span class="token function">registerRenameProvider</span><span class="token punctuation">(</span>
            <span class="token constant">GO_MODE</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">GoRenameProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>基础实现</strong></p><p>不提供本功能支持。</p></blockquote><blockquote><p><strong>进阶实现</strong></p><p>返回工作区中全部需要生效的编辑区，比如当一个符号在项目的各个地方都被引用时。</p></blockquote>`,21);function Jn(Un,Kn){const s=i("ExternalLinkIcon");return p(),c("div",null,[r,n("p",null,[e("程序性语言特性是由"),n("a",u,[d,a(s)]),e("API提供的一系列智能编辑功能。在VS Code中有两种实现动态语言特性的途径。我们先以"),k,e("为例：")]),v,n("p",null,[e("正如你所见，代码中"),n("a",m,[g,a(s)]),e("API可以很方便地在JS文件中提供悬停提示的内容。这个插件激活后，只要你悬停到了JS代码上，VS Code就会查询全部对JS注册了的"),n("a",b,[h,a(s)]),e("然后在悬浮提示框中显示对应内容。你可以查看下面的"),f,e("，里面包含了VS Code API / LSP实现的语言功能。")]),n("p",null,[e("那么一种实现就是使用了"),n("a",_,[e("语言服务器协议"),a(s)]),e("的语言服务器。它的实现方式如下：")]),n("ul",null,[x,n("li",null,[e("语言客户端就像普通插件一样，运行于Node.js插件主机环境中。这个插件激活后，会启动另一个进程——语言服务器，然后两者通过"),n("a",y,[e("语言服务器协议"),a(s)]),e("进行通信。")]),q,w,P,D]),C,T,E,j,G,n("table",null,[S,n("tbody",null,[n("tr",null,[n("td",null,[n("a",F,[H,a(s)])]),n("td",null,[n("a",O,[e("PublishDiagnostics"),a(s)])])]),n("tr",null,[n("td",null,[n("a",L,[R,a(s)])]),n("td",null,[n("a",M,[e("Completion"),a(s)]),e(" & "),n("a",A,[e("Completion Resolve"),a(s)])])]),n("tr",null,[n("td",null,[n("a",I,[z,a(s)])]),n("td",null,[n("a",V,[e("Hover"),a(s)])])]),n("tr",null,[n("td",null,[n("a",B,[N,a(s)])]),n("td",null,[n("a",W,[e("SignatureHelp"),a(s)])])]),n("tr",null,[n("td",null,[n("a",J,[U,a(s)])]),n("td",null,[n("a",K,[e("Definition"),a(s)])])]),n("tr",null,[n("td",null,[n("a",Q,[X,a(s)])]),n("td",null,[n("a",Y,[e("TypeDefinition"),a(s)])])]),n("tr",null,[n("td",null,[n("a",Z,[$,a(s)])]),n("td",null,[n("a",nn,[e("Implementation"),a(s)])])]),n("tr",null,[n("td",null,[n("a",sn,[an,a(s)])]),n("td",null,[n("a",en,[e("References"),a(s)])])]),n("tr",null,[n("td",null,[n("a",tn,[on,a(s)])]),n("td",null,[n("a",pn,[e("DocumentHighlight"),a(s)])])]),n("tr",null,[n("td",null,[n("a",cn,[ln,a(s)])]),n("td",null,[n("a",rn,[e("DocumentSymbol"),a(s)])])]),n("tr",null,[n("td",null,[n("a",un,[dn,a(s)])]),n("td",null,[n("a",kn,[e("CodeAction"),a(s)])])]),n("tr",null,[n("td",null,[n("a",vn,[mn,a(s)])]),n("td",null,[n("a",gn,[e("CodeLens"),a(s)]),e(" & "),n("a",bn,[e("CodeLens Resolve"),a(s)])])]),n("tr",null,[n("td",null,[n("a",hn,[fn,a(s)])]),n("td",null,[n("a",_n,[e("DocumentLink"),a(s)]),e(" & "),n("a",xn,[e("DocumentLink"),a(s)])])]),n("tr",null,[n("td",null,[n("a",yn,[qn,a(s)])]),n("td",null,[n("a",wn,[e("DocumentColor"),a(s)]),e(" & "),n("a",Pn,[e("Color Presentation"),a(s)])])]),n("tr",null,[n("td",null,[n("a",Dn,[Cn,a(s)])]),n("td",null,[n("a",Tn,[e("Formatting"),a(s)])])]),n("tr",null,[n("td",null,[n("a",En,[jn,a(s)])]),n("td",null,[n("a",Gn,[e("RangeFormatting"),a(s)])])]),n("tr",null,[n("td",null,[n("a",Sn,[Fn,a(s)])]),n("td",null,[n("a",Hn,[e("OnTypeFormatting"),a(s)])])]),n("tr",null,[n("td",null,[n("a",On,[Ln,a(s)])]),n("td",null,[n("a",Rn,[e("Rename"),a(s)]),e(" & "),n("a",Mn,[e("Prepare Rename"),a(s)])])]),n("tr",null,[n("td",null,[n("a",An,[In,a(s)])]),n("td",null,[n("a",zn,[e("FoldingRange"),a(s)])])])])]),Vn,n("p",null,[e("!> **注意：**用户"),n("a",Bn,[e("设置"),a(s)]),e("中的"),Nn,e("控制着本功能。")]),Wn])}const Yn=o(l,[["render",Jn],["__file","05.programmatic-language-features.html.vue"]]);export{Yn as default};
