import{_ as i}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as l,c as u,a as s,b as n,d as a,w as p,e,r as c}from"./app.ed9f300c.js";const r={},d=s("h1",{id:"语言插件指引",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#语言插件指引","aria-hidden":"true"},"#"),n(" 语言插件指引")],-1),k=s("p",null,"当你听到VS Code支持了一门语言，你一般能想到语法高亮、代码补全，或者还有调试支持。能想到这么多很好，但是语言插件还可以承担更多的任务。",-1),v={href:"https://microsoft.github.io/language-server-protocol",target:"_blank",rel:"noopener noreferrer"},m={href:"https://github.com/Microsoft/vscode-languageserver-node",target:"_blank",rel:"noopener noreferrer"},b=e('<p>在实现语言支持时，你也可以自由选择你想要实现的language server protocol，在protocol的<code>initialize</code>方法中声明语言服务器的功能。</p><p>不过语言服务器架构并不是提供语言特性的唯一途径，你也可以在插件的主要代码中直接实现功能。在本章指引中，我们不仅展示了基于<strong>Language Server Protocol</strong>的实现（要求使用events和configuration），也展示了通过注册 <em>语言功能提供器(language feature provider)</em> <strong>直接实现</strong> 实现语言特性（如：<code>registerHoverProvider</code>）</p><p>为了让你更方便地决定哪些特性应该先实现，哪些应该是之后用来改进代码的，我们按language server protocol的类名和方法的出现顺序一一展示在下面。每个指引下面都包含了<strong>基础</strong>支持和<strong>进阶</strong>实现。</p><h2 id="基于配置的语言支持" tabindex="-1"><a class="header-anchor" href="#基于配置的语言支持" aria-hidden="true">#</a> 基于<strong>配置</strong>的语言支持</h2><hr><p><a href="#%E8%AF%AD%E6%B3%95%E9%AB%98%E4%BA%AE">语法高亮</a>，<a href="#%E6%BA%90%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5">代码片段</a>和<a href="#%E6%99%BA%E8%83%BD%E6%8B%AC%E5%8F%B7%E5%8C%B9%E9%85%8D">智能括号匹配</a>可以通过声明配置而不需要任何插件代码直接实现。</p><h4 id="语言标识符" tabindex="-1"><a class="header-anchor" href="#语言标识符" aria-hidden="true">#</a> 语言标识符</h4>',7),g=s("em",null,"小写字符串",-1),h=s("code",null,"javascript",-1),q=s("code",null,"markdown",-1),y={href:"https://code.visualstudio.com/docs/languages/identifiers",target:"_blank",rel:"noopener noreferrer"},f=e(`<h2 id="语法高亮" tabindex="-1"><a class="header-anchor" href="#语法高亮" aria-hidden="true">#</a> 语法高亮</h2><hr><p><img src="https://raw.githubusercontent.com/Microsoft/vscode-docs/master/docs/extensionAPI/images/language-support/syntax-highlighting.png" alt=""></p><p>想要支持语法高亮，插件需要在<code>package.json</code>中注册一个TextMate语法<code>.tmLanguage</code>。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token property">&quot;contributes&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;languages&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;markdown&quot;</span><span class="token punctuation">,</span>
            ...
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">&quot;grammars&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;language&quot;</span><span class="token operator">:</span> <span class="token string">&quot;markdown&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;scopeName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;text.html.markdown&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./syntaxes/markdown.tmLanguage.json&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span> ...
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VS Code支持两种格式的语法文件——Plist（<code>.tmLanguage</code>）和JSON（<code>.tmLanguage.json</code>）。Plist文件因为过于混乱，通常我们会从其他语言编译而来，如：YAML。如果你需要创建一种全新的语法，我们更推荐使用JSON语法。</p><blockquote><p><strong>基础</strong></p></blockquote><blockquote><p>为一种简单的语法提供字符串、注释、关键字高亮</p></blockquote><blockquote><p><strong>进阶</strong></p></blockquote><blockquote><p>为语法提供术语、表达式解析，然后支持变量和函数引用等等的色彩支持。</p></blockquote><h2 id="源代码片段" tabindex="-1"><a class="header-anchor" href="#源代码片段" aria-hidden="true">#</a> 源代码片段</h2><hr><p><img src="https://raw.githubusercontent.com/Microsoft/vscode-docs/master/docs/extensionAPI/images/language-support/snippets.gif" alt="snippets"></p>`,13),x=s("code",null,"package.json",-1),w={href:"https://code.visualstudio.com/docs/editor/userdefinedsnippets#_creating-your-own-snippets",target:"_blank",rel:"noopener noreferrer"},P=e(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token property">&quot;contributes&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;snippets&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;language&quot;</span><span class="token operator">:</span> <span class="token string">&quot;javascript&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./snippets/javascript.json&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> ...
    <span class="token punctuation">]</span><span class="token punctuation">,</span> ...
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>基础</strong></p></blockquote><blockquote><p>在这个例子中用占位符提供<code>markdown</code>代码片段：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token property">&quot;Insert ordered list&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
   <span class="token property">&quot;prefix&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ordered list&quot;</span><span class="token punctuation">,</span>
   <span class="token property">&quot;body&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
       <span class="token string">&quot;1. \${first}&quot;</span><span class="token punctuation">,</span>
       <span class="token string">&quot;2. \${second}&quot;</span><span class="token punctuation">,</span>
       <span class="token string">&quot;3. \${third}&quot;</span><span class="token punctuation">,</span>
       <span class="token string">&quot;$0&quot;</span>
   <span class="token punctuation">]</span><span class="token punctuation">,</span>
   <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Insert ordered list&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><blockquote><p><strong>进阶</strong></p></blockquote><blockquote><p>用显式的tab符阻止引导用户，然后用嵌套的占位符快速开发：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token property">&quot;key: \\&quot;value\\&quot; (Hash Pair)&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;prefix&quot;</span><span class="token operator">:</span> <span class="token string">&quot;key&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;body&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\${1:key}: \${2:\\&quot;\${3:value}\\&quot;}&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><h2 id="智能括号匹配" tabindex="-1"><a class="header-anchor" href="#智能括号匹配" aria-hidden="true">#</a> 智能括号匹配</h2><hr><p><img src="https://raw.githubusercontent.com/Microsoft/vscode-docs/master/docs/extensionAPI/images/language-support/smart-editing.gif" alt="smart-editing"></p><p>在插件的<code>package.json</code>中进行配置</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token property">&quot;contributes&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;languages&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;typescript&quot;</span><span class="token punctuation">,</span>
            ...
            <span class="token property">&quot;configuration&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./language-configuration.json&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> ...
    <span class="token punctuation">]</span>
    ...
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>基础</strong></p></blockquote><blockquote><p>无</p></blockquote><blockquote><p><strong>进阶</strong></p></blockquote><blockquote><p>下面是一个Typescript示例：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
   <span class="token property">&quot;comments&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
       <span class="token property">&quot;lineComment&quot;</span><span class="token operator">:</span> <span class="token string">&quot;//&quot;</span><span class="token punctuation">,</span>
       <span class="token property">&quot;blockComment&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token string">&quot;/*&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;*/&quot;</span> <span class="token punctuation">]</span>
   <span class="token punctuation">}</span><span class="token punctuation">,</span>
   <span class="token property">&quot;brackets&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
       <span class="token punctuation">[</span><span class="token string">&quot;{&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;}&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
       <span class="token punctuation">[</span><span class="token string">&quot;[&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;]&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
       <span class="token punctuation">[</span><span class="token string">&quot;(&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;)&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
       <span class="token punctuation">[</span><span class="token string">&quot;&lt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&gt;&quot;</span><span class="token punctuation">]</span>
   <span class="token punctuation">]</span><span class="token punctuation">,</span>
   <span class="token property">&quot;autoClosingPairs&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
       <span class="token punctuation">{</span> <span class="token property">&quot;open&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;close&quot;</span><span class="token operator">:</span> <span class="token string">&quot;}&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
       <span class="token punctuation">{</span> <span class="token property">&quot;open&quot;</span><span class="token operator">:</span> <span class="token string">&quot;[&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;close&quot;</span><span class="token operator">:</span> <span class="token string">&quot;]&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
       <span class="token punctuation">{</span> <span class="token property">&quot;open&quot;</span><span class="token operator">:</span> <span class="token string">&quot;(&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;close&quot;</span><span class="token operator">:</span> <span class="token string">&quot;)&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
       <span class="token punctuation">{</span> <span class="token property">&quot;open&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;close&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;notIn&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;comment&quot;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
       <span class="token punctuation">{</span> <span class="token property">&quot;open&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\\&quot;&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;close&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\\&quot;&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;notIn&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;string&quot;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
       <span class="token punctuation">{</span> <span class="token property">&quot;open&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\`&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;close&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\`&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;notIn&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;comment&quot;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
       <span class="token punctuation">{</span> <span class="token property">&quot;open&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/**&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;close&quot;</span><span class="token operator">:</span> <span class="token string">&quot; */&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;notIn&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;string&quot;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span>
   <span class="token punctuation">]</span><span class="token punctuation">,</span>
   <span class="token property">&quot;surroundingPairs&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
       <span class="token punctuation">[</span><span class="token string">&quot;{&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;}&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
       <span class="token punctuation">[</span><span class="token string">&quot;[&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;]&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
       <span class="token punctuation">[</span><span class="token string">&quot;(&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;)&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
       <span class="token punctuation">[</span><span class="token string">&quot;&lt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&gt;&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
       <span class="token punctuation">[</span><span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
       <span class="token punctuation">[</span><span class="token string">&quot;\\&quot;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\\&quot;&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
       <span class="token punctuation">[</span><span class="token string">&quot;\`&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\`&quot;</span><span class="token punctuation">]</span>
   <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><h2 id="编程语言支持" tabindex="-1"><a class="header-anchor" href="#编程语言支持" aria-hidden="true">#</a> 编程语言支持</h2><hr>`,16),C={href:"https://microsoft.github.io/language-server-protocol",target:"_blank",rel:"noopener noreferrer"},_=s("code",null,"active",-1),D=s("em",null,"供应器（provider）",-1),j=s("strong",null,"通过语言服务器实现",-1),E=s("strong",null,"直接实现",-1),T=e(`<p>language server protocol方式遵循在<code>initialize</code>请求中确定服务器的能力，然后基于用户行为处理特定的请求。</p><p>直接实现方式则要求插件激活时注册好<em>特性供应器（feature provider）</em>，常常以<code>DocumentSelector</code>的出现作为供应器的标识。</p><p>在下面的例子里，是一个Go语言文件的供应器：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token constant">GO_MODE</span><span class="token operator">:</span> vscode<span class="token punctuation">.</span>DocumentFilter <span class="token operator">=</span> <span class="token punctuation">{</span> language<span class="token operator">:</span> <span class="token string">&#39;go&#39;</span><span class="token punctuation">,</span> scheme<span class="token operator">:</span> <span class="token string">&#39;file&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="显示悬浮提示-hovers" tabindex="-1"><a class="header-anchor" href="#显示悬浮提示-hovers" aria-hidden="true">#</a> 显示悬浮提示（Hovers）</h2><hr><p><em>悬浮提示</em>提供了鼠标悬停处关于 符号/对象 的相关信息，显示的内容通常是符号的类型和描述。</p><p><img src="https://raw.githubusercontent.com/Microsoft/vscode-docs/master/docs/extensionAPI/images/language-support/hovers.gif" alt="hovers"></p><h4 id="通过语言服务器实现" tabindex="-1"><a class="header-anchor" href="#通过语言服务器实现" aria-hidden="true">#</a> 通过语言服务器实现</h4><p>在<code>initialize</code>响应方法中，你的语言服务器首先要声明能够提供<em>悬浮提示</em></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    ...
    <span class="token property">&quot;capabilities&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;hoverProvider&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;true&quot;</span><span class="token punctuation">,</span>
        ...
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>另外，你的语言服务器需要响应<code>textDocument/hover</code>请求。</p><h4 id="直接实现" tabindex="-1"><a class="header-anchor" href="#直接实现" aria-hidden="true">#</a> 直接实现</h4><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">GoHoverProvider</span> <span class="token keyword">implements</span> <span class="token class-name">HoverProvider</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">provideHover</span><span class="token punctuation">(</span>
        document<span class="token operator">:</span> TextDocument<span class="token punctuation">,</span> position<span class="token operator">:</span> Position<span class="token punctuation">,</span> token<span class="token operator">:</span> CancellationToken<span class="token punctuation">)</span><span class="token operator">:</span>
        Thenable<span class="token operator">&lt;</span>Hover<span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">activate</span><span class="token punctuation">(</span>ctx<span class="token operator">:</span> vscode<span class="token punctuation">.</span>ExtensionContext<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    ctx<span class="token punctuation">.</span>subscriptions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
        vscode<span class="token punctuation">.</span>languages<span class="token punctuation">.</span><span class="token function">registerHoverProvider</span><span class="token punctuation">(</span>
            <span class="token constant">GO_MODE</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">GoHoverProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>基础</strong></p></blockquote><blockquote><p>显示一些类型信息，也可以显示文档。</p></blockquote><blockquote><p><strong>进阶</strong></p></blockquote><blockquote><p>按照你的主题对匹配的<em>method</em>进行着色</p></blockquote><h2 id="显示代码补全提示" tabindex="-1"><a class="header-anchor" href="#显示代码补全提示" aria-hidden="true">#</a> 显示代码补全提示</h2><hr><p><img src="https://raw.githubusercontent.com/Microsoft/vscode-docs/master/docs/extensionAPI/images/language-support/code-completion.gif" alt=""></p><p>代码补全提供了上下文感知，并为用户提供提示：</p><h4 id="通过语言服务器实现-1" tabindex="-1"><a class="header-anchor" href="#通过语言服务器实现-1" aria-hidden="true">#</a> 通过语言服务器实现</h4><p>在<code>initialize</code>响应方法中，你的语言服务器首先要声明能够提供<em>代码补全</em>，在<code>completionItem\\resolve</code>方法中对计算出得补全项添加其他信息。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    ...
    <span class="token property">&quot;capabilities&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;completionProvider&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;resolveProvider&quot;</span><span class="token operator">:</span> <span class="token string">&quot;true&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;triggerCharacters&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span> &#39;.&#39; <span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
        ...
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="直接实现-1" tabindex="-1"><a class="header-anchor" href="#直接实现-1" aria-hidden="true">#</a> 直接实现</h4><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">GoCompletionItemProvider</span> <span class="token keyword">implements</span> <span class="token class-name">vscode</span><span class="token punctuation">.</span>CompletionItemProvider <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">provideCompletionItems</span><span class="token punctuation">(</span>
        document<span class="token operator">:</span> vscode<span class="token punctuation">.</span>TextDocument<span class="token punctuation">,</span> position<span class="token operator">:</span> vscode<span class="token punctuation">.</span>Position<span class="token punctuation">,</span> token<span class="token operator">:</span> vscode<span class="token punctuation">.</span>CancellationToken<span class="token punctuation">)</span><span class="token operator">:</span>
        Thenable<span class="token operator">&lt;</span>vscode<span class="token punctuation">.</span>CompletionItem<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">activate</span><span class="token punctuation">(</span>ctx<span class="token operator">:</span> vscode<span class="token punctuation">.</span>ExtensionContext<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    ctx<span class="token punctuation">.</span>subscriptions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">getDisposable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ctx<span class="token punctuation">.</span>subscriptions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
        vscode<span class="token punctuation">.</span>languages<span class="token punctuation">.</span><span class="token function">registerCompletionItemProvider</span><span class="token punctuation">(</span>
            <span class="token constant">GO_MODE</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">GoCompletionItemProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;.&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\\&quot;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>基础</strong></p><p>不需要你提供解析函数</p></blockquote><blockquote><p><strong>进阶</strong></p><p>为用户选择的代码补全项提供解析函数和其他信息，信息就显示在选中项的旁边。</p></blockquote><h2 id="提供诊断信息" tabindex="-1"><a class="header-anchor" href="#提供诊断信息" aria-hidden="true">#</a> 提供诊断信息</h2><hr><p>诊断信息是一种提示代码错误的常见方式。</p><h4 id="通过语言服务器实现-2" tabindex="-1"><a class="header-anchor" href="#通过语言服务器实现-2" aria-hidden="true">#</a> 通过语言服务器实现</h4><p>你的语言服务器将<code>textDocument/publishDiagnostics</code>信息发送给语言客户端。这个信息由一系列包含诊断项和源URI的数组组成。</p><p><img src="https://raw.githubusercontent.com/Microsoft/vscode-docs/master/docs/extensionAPI/images/language-support/diagnostics.gif" alt="diagnostics"></p><p>**注意：**客户端不会主动向服务器要诊断信息，而是服务器将诊断信息推送给客户端。</p><h4 id="直接实现-2" tabindex="-1"><a class="header-anchor" href="#直接实现-2" aria-hidden="true">#</a> 直接实现</h4><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">let</span> diagnosticCollection<span class="token operator">:</span> vscode<span class="token punctuation">.</span>DiagnosticCollection<span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">activate</span><span class="token punctuation">(</span>ctx<span class="token operator">:</span> vscode<span class="token punctuation">.</span>ExtensionContext<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>
  ctx<span class="token punctuation">.</span>subscriptions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">getDisposable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  diagnosticCollection <span class="token operator">=</span> vscode<span class="token punctuation">.</span>languages<span class="token punctuation">.</span><span class="token function">createDiagnosticCollection</span><span class="token punctuation">(</span><span class="token string">&#39;go&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  ctx<span class="token punctuation">.</span>subscriptions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>diagnosticCollection<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token operator">...</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">onChange</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> uri <span class="token operator">=</span> document<span class="token punctuation">.</span>uri<span class="token punctuation">;</span>
  <span class="token function">check</span><span class="token punctuation">(</span>uri<span class="token punctuation">.</span>fsPath<span class="token punctuation">,</span> goConfig<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>errors <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    diagnosticCollection<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> diagnosticMap<span class="token operator">:</span> Map<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> vscode<span class="token punctuation">.</span>Diagnostic<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    errors<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>error <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> canonicalFile <span class="token operator">=</span> vscode<span class="token punctuation">.</span>Uri<span class="token punctuation">.</span><span class="token function">file</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>file<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">let</span> range <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">vscode</span><span class="token punctuation">.</span><span class="token function">Range</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>line<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> error<span class="token punctuation">.</span>startColumn<span class="token punctuation">,</span> error<span class="token punctuation">.</span>line<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> error<span class="token punctuation">.</span>endColumn<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">let</span> diagnostics <span class="token operator">=</span> diagnosticMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>canonicalFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>diagnostics<span class="token punctuation">)</span> <span class="token punctuation">{</span> diagnostics <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
      diagnostics<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">vscode</span><span class="token punctuation">.</span><span class="token function">Diagnostic</span><span class="token punctuation">(</span>range<span class="token punctuation">,</span> error<span class="token punctuation">.</span>msg<span class="token punctuation">,</span> error<span class="token punctuation">.</span>severity<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      diagnosticMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>canonicalFile<span class="token punctuation">,</span> diagnostics<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    diagnosticMap<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>diags<span class="token punctuation">,</span> file<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      diagnosticCollection<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>vscode<span class="token punctuation">.</span>Uri<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">,</span> diags<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>基础</strong></p><p>为打开的编辑器提供诊断报告。较差的实现，每次保存时至少报告一次。更好的做法是，基于未保存的内容自动提供诊断。</p></blockquote><blockquote><p><strong>进阶</strong></p><p>不仅仅为打开的编辑器报告诊断信息，而是为项目文件夹的所有资源提供诊断，不论这些资源是不是在编辑器中打开。</p></blockquote><h2 id="为函数和方法提供帮助信息" tabindex="-1"><a class="header-anchor" href="#为函数和方法提供帮助信息" aria-hidden="true">#</a> 为函数和方法提供帮助信息</h2><hr><p>当用户输入函数或者方法时，显示将要调用的函数/方法的相关信息。</p><p><img src="https://raw.githubusercontent.com/Microsoft/vscode-docs/master/docs/extensionAPI/images/language-support/signature-help.gif" alt="signature-help"></p><h4 id="通过语言服务器实现-3" tabindex="-1"><a class="header-anchor" href="#通过语言服务器实现-3" aria-hidden="true">#</a> 通过语言服务器实现</h4><p>首先响应<code>initialize</code>方法，声明提供<em>特征值</em>支持，然后还要响应<code>textDocument/signatureHelp</code>请求</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    ...
    <span class="token property">&quot;capabilities&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;signatureHelpProvider&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;triggerCharacters&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span> &#39;(&#39; <span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
        ...
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="直接实现-3" tabindex="-1"><a class="header-anchor" href="#直接实现-3" aria-hidden="true">#</a> 直接实现</h4><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">GoSignatureHelpProvider</span> <span class="token keyword">implements</span> <span class="token class-name">SignatureHelpProvider</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">provideSignatureHelp</span><span class="token punctuation">(</span>
        document<span class="token operator">:</span> TextDocument<span class="token punctuation">,</span> position<span class="token operator">:</span> Position<span class="token punctuation">,</span> token<span class="token operator">:</span> CancellationToken<span class="token punctuation">)</span><span class="token operator">:</span>
        <span class="token builtin">Promise</span><span class="token operator">&lt;</span>SignatureHelp<span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">activate</span><span class="token punctuation">(</span>ctx<span class="token operator">:</span> vscode<span class="token punctuation">.</span>ExtensionContext<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    ctx<span class="token punctuation">.</span>subscriptions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
        vscode<span class="token punctuation">.</span>languages<span class="token punctuation">.</span><span class="token function">registerSignatureHelpProvider</span><span class="token punctuation">(</span>
            <span class="token constant">GO_MODE</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">GoSignatureHelpProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;(&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>基础</strong></p><p>确保signature help函数中包含了函数或方法的文档说明。</p></blockquote><blockquote><p><strong>进阶</strong></p><p>无</p></blockquote><h2 id="显示符号定义" tabindex="-1"><a class="header-anchor" href="#显示符号定义" aria-hidden="true">#</a> 显示符号定义</h2><hr><p>允许用户查看变量、函数、方法的定义。 <img src="https://raw.githubusercontent.com/Microsoft/vscode-docs/master/docs/extensionAPI/images/language-support/goto-definition.gif" alt="goto-definition"></p><h4 id="通过语言服务器实现-4" tabindex="-1"><a class="header-anchor" href="#通过语言服务器实现-4" aria-hidden="true">#</a> 通过语言服务器实现</h4><p>除了响应<code>initialize</code>方法外，语言服务器还要声明提供转跳到定义位置的特性。当然你的语言服务器还需要响应<code>textDocument/definition</code>请求。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    ...
    <span class="token property">&quot;capabilities&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;definitionProvider&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;true&quot;</span>
        ...
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="直接实现-4" tabindex="-1"><a class="header-anchor" href="#直接实现-4" aria-hidden="true">#</a> 直接实现</h4><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">GoDefinitionProvider</span> <span class="token keyword">implements</span> <span class="token class-name">vscode</span><span class="token punctuation">.</span>DefinitionProvider <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">provideDefinition</span><span class="token punctuation">(</span>
        document<span class="token operator">:</span> vscode<span class="token punctuation">.</span>TextDocument<span class="token punctuation">,</span> position<span class="token operator">:</span> vscode<span class="token punctuation">.</span>Position<span class="token punctuation">,</span> token<span class="token operator">:</span> vscode<span class="token punctuation">.</span>CancellationToken<span class="token punctuation">)</span><span class="token operator">:</span>
        Thenable<span class="token operator">&lt;</span>vscode<span class="token punctuation">.</span>Location<span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">activate</span><span class="token punctuation">(</span>ctx<span class="token operator">:</span> vscode<span class="token punctuation">.</span>ExtensionContext<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    ctx<span class="token punctuation">.</span>subscriptions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
        vscode<span class="token punctuation">.</span>languages<span class="token punctuation">.</span><span class="token function">registerDefinitionProvider</span><span class="token punctuation">(</span>
            <span class="token constant">GO_MODE</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">GoDefinitionProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>基础</strong></p><p>如果符号的含义模棱两可，你把多个定义都显示出来。</p></blockquote><blockquote><p><strong>进阶</strong></p><p>无</p></blockquote><h2 id="查找符号的所有引用" tabindex="-1"><a class="header-anchor" href="#查找符号的所有引用" aria-hidden="true">#</a> 查找符号的所有引用</h2><p>允许用户查看某个变量/函数/方法/符号的所有源代码的位置。</p><p><img src="https://raw.githubusercontent.com/Microsoft/vscode-docs/master/docs/extensionAPI/images/language-support/find-references.gif" alt="find-references"></p><h4 id="通过语言服务器实现-5" tabindex="-1"><a class="header-anchor" href="#通过语言服务器实现-5" aria-hidden="true">#</a> 通过语言服务器实现</h4><p>除了响应<code>initialize</code>方法外，语言服务器还要声明提供<em>定位符号引用</em>的特性。当然你的语言服务器还需要响应<code>textDocument/references</code>请求。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    ...
    <span class="token property">&quot;capabilities&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;definitionProvider&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;true&quot;</span>
        ...
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="直接实现-5" tabindex="-1"><a class="header-anchor" href="#直接实现-5" aria-hidden="true">#</a> 直接实现</h4><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">GoReferenceProvider</span> <span class="token keyword">implements</span> <span class="token class-name">vscode</span><span class="token punctuation">.</span>ReferenceProvider <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">provideReferences</span><span class="token punctuation">(</span>
        document<span class="token operator">:</span> vscode<span class="token punctuation">.</span>TextDocument<span class="token punctuation">,</span> position<span class="token operator">:</span> vscode<span class="token punctuation">.</span>Position<span class="token punctuation">,</span>
        options<span class="token operator">:</span> <span class="token punctuation">{</span> includeDeclaration<span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> token<span class="token operator">:</span> vscode<span class="token punctuation">.</span>CancellationToken<span class="token punctuation">)</span><span class="token operator">:</span>
        Thenable<span class="token operator">&lt;</span>vscode<span class="token punctuation">.</span>Location<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">activate</span><span class="token punctuation">(</span>ctx<span class="token operator">:</span> vscode<span class="token punctuation">.</span>ExtensionContext<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    ctx<span class="token punctuation">.</span>subscriptions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
        vscode<span class="token punctuation">.</span>languages<span class="token punctuation">.</span><span class="token function">registerReferenceProvider</span><span class="token punctuation">(</span>
            <span class="token constant">GO_MODE</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">GoReferenceProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>基础</strong></p><p>返回所有引用的位置（资源的URI和范围）。</p></blockquote><blockquote><p><strong>进阶</strong></p><p>无</p></blockquote><h2 id="高亮文档中所有匹配的符号" tabindex="-1"><a class="header-anchor" href="#高亮文档中所有匹配的符号" aria-hidden="true">#</a> 高亮文档中所有匹配的符号</h2><p>允许用户查看打开的编辑器中所有匹配的符号。</p><p><img src="https://raw.githubusercontent.com/Microsoft/vscode-docs/master/docs/extensionAPI/images/language-support/document-highlights.gif" alt=""></p><h4 id="通过语言服务器实现-6" tabindex="-1"><a class="header-anchor" href="#通过语言服务器实现-6" aria-hidden="true">#</a> 通过语言服务器实现</h4><p>除了响应<code>initialize</code>方法外，语言服务器还要声明提供<em>文档符号定位</em>的特性。当然你的语言服务器还需要响应<code>textDocument/documentHighlight</code>请求。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    ...
    <span class="token property">&quot;capabilities&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;documentHighlightProvider&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;true&quot;</span>
        ...
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="直接实现-6" tabindex="-1"><a class="header-anchor" href="#直接实现-6" aria-hidden="true">#</a> 直接实现</h4><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">GoDocumentHighlightProvider</span> <span class="token keyword">implements</span> <span class="token class-name">vscode</span><span class="token punctuation">.</span>DocumentHighlightProvider <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">provideDocumentHighlights</span><span class="token punctuation">(</span>
        document<span class="token operator">:</span> vscode<span class="token punctuation">.</span>TextDocument<span class="token punctuation">,</span> position<span class="token operator">:</span> vscode<span class="token punctuation">.</span>Position<span class="token punctuation">,</span> token<span class="token operator">:</span> vscode<span class="token punctuation">.</span>CancellationToken<span class="token punctuation">)</span><span class="token operator">:</span>
        vscode<span class="token punctuation">.</span>DocumentHighlight<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">|</span> Thenable<span class="token operator">&lt;</span>vscode<span class="token punctuation">.</span>DocumentHighlight<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
    <span class="token operator">...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">activate</span><span class="token punctuation">(</span>ctx<span class="token operator">:</span> vscode<span class="token punctuation">.</span>ExtensionContext<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    ctx<span class="token punctuation">.</span>subscriptions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
        vscode<span class="token punctuation">.</span>languages<span class="token punctuation">.</span><span class="token function">registerDocumentHighlightProvider</span><span class="token punctuation">(</span>
            <span class="token constant">GO_MODE</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">GoDocumentHighlightProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>基础</strong></p><p>你需要返回文档中找到的所有引用。</p></blockquote><blockquote><p><strong>进阶</strong></p><p>无</p></blockquote><h2 id="显示文档中所有符号定义" tabindex="-1"><a class="header-anchor" href="#显示文档中所有符号定义" aria-hidden="true">#</a> 显示文档中所有符号定义</h2><hr><p>允许用户快速跳转到编辑器中的任何符号定义。</p><p><img src="https://raw.githubusercontent.com/Microsoft/vscode-docs/master/docs/extensionAPI/images/language-support/document-symbols.gif" alt="document-symbols"></p><h4 id="通过语言服务器实现-7" tabindex="-1"><a class="header-anchor" href="#通过语言服务器实现-7" aria-hidden="true">#</a> 通过语言服务器实现</h4><p>除了响应<code>initialize</code>方法外，语言服务器还要声明提供<em>文档符号定位</em>的特性。当然你的语言服务器还需要响应<code>textDocument/documentSymbol</code>请求。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    ...
    <span class="token property">&quot;capabilities&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;documentSymbolProvider&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;true&quot;</span>
        ...
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="直接实现-7" tabindex="-1"><a class="header-anchor" href="#直接实现-7" aria-hidden="true">#</a> 直接实现</h4><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">GoDocumentSymbolProvider</span> <span class="token keyword">implements</span> <span class="token class-name">vscode</span><span class="token punctuation">.</span>DocumentSymbolProvider <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">provideDocumentSymbols</span><span class="token punctuation">(</span>
        document<span class="token operator">:</span> vscode<span class="token punctuation">.</span>TextDocument<span class="token punctuation">,</span> token<span class="token operator">:</span> vscode<span class="token punctuation">.</span>CancellationToken<span class="token punctuation">)</span><span class="token operator">:</span>
        Thenable<span class="token operator">&lt;</span>vscode<span class="token punctuation">.</span>SymbolInformation<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">activate</span><span class="token punctuation">(</span>ctx<span class="token operator">:</span> vscode<span class="token punctuation">.</span>ExtensionContext<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    ctx<span class="token punctuation">.</span>subscriptions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
        vscode<span class="token punctuation">.</span>languages<span class="token punctuation">.</span><span class="token function">registerDocumentSymbolProvider</span><span class="token punctuation">(</span>
            <span class="token constant">GO_MODE</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">GoDocumentSymbolProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>基础</strong></p><p>返回文档中的所有符号。定义的符号类型诸如：变量、函数、类、方法等。</p></blockquote><blockquote><p><strong>进阶</strong></p><p>无</p></blockquote><h2 id="显示文档中所有符号定义-1" tabindex="-1"><a class="header-anchor" href="#显示文档中所有符号定义-1" aria-hidden="true">#</a> 显示文档中所有符号定义</h2><hr><p>允许用户快速跳转到打开的文件夹（工作区）中的任何符号定义。</p><p><img src="https://raw.githubusercontent.com/Microsoft/vscode-docs/master/docs/extensionAPI/images/language-support/workspace-symbols.gif" alt="workspace-symbols"></p><h4 id="通过语言服务器实现-8" tabindex="-1"><a class="header-anchor" href="#通过语言服务器实现-8" aria-hidden="true">#</a> 通过语言服务器实现</h4><p>除了响应<code>initialize</code>方法外，语言服务器还要声明提供<em>全局符号定位</em>的特性。当然你的语言服务器还需要响应<code>workspace/symbol</code>请求。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    ...
    <span class="token property">&quot;capabilities&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;workspaceSymbolProvider&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;true&quot;</span>
        ...
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="直接实现-8" tabindex="-1"><a class="header-anchor" href="#直接实现-8" aria-hidden="true">#</a> 直接实现</h4><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">GoWorkspaceSymbolProvider</span> <span class="token keyword">implements</span> <span class="token class-name">vscode</span><span class="token punctuation">.</span>WorkspaceSymbolProvider <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">provideWorkspaceSymbols</span><span class="token punctuation">(</span>
        query<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> token<span class="token operator">:</span> vscode<span class="token punctuation">.</span>CancellationToken<span class="token punctuation">)</span><span class="token operator">:</span>
        Thenable<span class="token operator">&lt;</span>vscode<span class="token punctuation">.</span>SymbolInformation<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">activate</span><span class="token punctuation">(</span>ctx<span class="token operator">:</span> vscode<span class="token punctuation">.</span>ExtensionContext<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    ctx<span class="token punctuation">.</span>subscriptions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
        vscode<span class="token punctuation">.</span>languages<span class="token punctuation">.</span><span class="token function">registerWorkspaceSymbolProvider</span><span class="token punctuation">(</span>
            <span class="token keyword">new</span> <span class="token class-name">GoWorkspaceSymbolProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>基础</strong></p><p>返回打开文件中的所有符号。定义的符号类型诸如：变量、函数、类、方法等。</p></blockquote><blockquote><p><strong>进阶</strong></p><p>无</p></blockquote><h2 id="修正错误和警告" tabindex="-1"><a class="header-anchor" href="#修正错误和警告" aria-hidden="true">#</a> 修正错误和警告</h2><hr><p>允许用户对错误或者警告进行更正。如果有可用的操作，就会有个灯泡💡出现在错误/警告旁边。当用户点击灯泡的时候，会出现可用的<em>代码操作</em>。</p><p><img src="https://raw.githubusercontent.com/Microsoft/vscode-docs/master/docs/extensionAPI/images/language-support/quick-fixes.gif" alt="quick-fixes"></p><h4 id="通过语言服务器实现-9" tabindex="-1"><a class="header-anchor" href="#通过语言服务器实现-9" aria-hidden="true">#</a> 通过语言服务器实现</h4><p>除了响应<code>initialize</code>方法外，语言服务器还要声明提供<em>代码操作</em>的特性。当然你的语言服务器还需要响应<code>textDocument/codeAction</code>请求。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    ...
    <span class="token property">&quot;capabilities&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;codeActionProvider&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;true&quot;</span>
        ...
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="直接实现-9" tabindex="-1"><a class="header-anchor" href="#直接实现-9" aria-hidden="true">#</a> 直接实现</h4><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">GoCodeActionProvider</span> <span class="token keyword">implements</span> <span class="token class-name">vscode</span><span class="token punctuation">.</span>CodeActionProvider <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">provideCodeActions</span><span class="token punctuation">(</span>
        document<span class="token operator">:</span> vscode<span class="token punctuation">.</span>TextDocument<span class="token punctuation">,</span> range<span class="token operator">:</span> vscode<span class="token punctuation">.</span>Range<span class="token punctuation">,</span>
        context<span class="token operator">:</span> vscode<span class="token punctuation">.</span>CodeActionContext<span class="token punctuation">,</span> token<span class="token operator">:</span> vscode<span class="token punctuation">.</span>CancellationToken<span class="token punctuation">)</span><span class="token operator">:</span>
        Thenable<span class="token operator">&lt;</span>vscode<span class="token punctuation">.</span>Command<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">activate</span><span class="token punctuation">(</span>ctx<span class="token operator">:</span> vscode<span class="token punctuation">.</span>ExtensionContext<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    ctx<span class="token punctuation">.</span>subscriptions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
        vscode<span class="token punctuation">.</span>languages<span class="token punctuation">.</span><span class="token function">registerCodeActionsProvider</span><span class="token punctuation">(</span>
            <span class="token constant">GO_MODE</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">GoCodeActionProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>基础</strong></p><p>为更正错误/警告提供<em>代码操作</em>。</p></blockquote><blockquote><p><strong>进阶</strong></p><p>提供重构级别的源代码修改，如<strong>提取方法</strong></p></blockquote><h2 id="codelens-——-为上下文提供源代码信息" tabindex="-1"><a class="header-anchor" href="#codelens-——-为上下文提供源代码信息" aria-hidden="true">#</a> CodeLens —— 为上下文提供源代码信息</h2><hr><p>在横屏弹出框中为用户提供可操作的、上下文级别的源代码。</p><p><img src="https://raw.githubusercontent.com/Microsoft/vscode-docs/master/docs/extensionAPI/images/language-support/code-lens.gif" alt="code-lens"></p><h4 id="通过语言服务器实现-10" tabindex="-1"><a class="header-anchor" href="#通过语言服务器实现-10" aria-hidden="true">#</a> 通过语言服务器实现</h4><p>除了响应<code>initialize</code>方法外，语言服务器还要声明提供<em>CodeLens</em>的特性，将<code>textDocument/codeAction</code>绑定到<em>CodeLens</em>命令上。当然你的语言服务器还需要响应<code>textDocument/codeLens</code>请求。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    ...
    <span class="token property">&quot;capabilities&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;codeLensProvider&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;resolveProvider&quot;</span><span class="token operator">:</span> <span class="token string">&quot;true&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="直接实现-10" tabindex="-1"><a class="header-anchor" href="#直接实现-10" aria-hidden="true">#</a> 直接实现</h4><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">GoRCodeLensProvider</span> <span class="token keyword">implements</span> <span class="token class-name">vscode</span><span class="token punctuation">.</span>CodeLensProvider <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">provideCodeLenses</span><span class="token punctuation">(</span>document<span class="token operator">:</span> TextDocument<span class="token punctuation">,</span> token<span class="token operator">:</span> CancellationToken<span class="token punctuation">)</span><span class="token operator">:</span>
        CodeLens<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">|</span> Thenable<span class="token operator">&lt;</span>CodeLens<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> resolveCodeLens<span class="token operator">?</span><span class="token punctuation">(</span>codeLens<span class="token operator">:</span> CodeLens<span class="token punctuation">,</span> token<span class="token operator">:</span> CancellationToken<span class="token punctuation">)</span><span class="token operator">:</span>
         CodeLens <span class="token operator">|</span> Thenable<span class="token operator">&lt;</span>CodeLens<span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">activate</span><span class="token punctuation">(</span>ctx<span class="token operator">:</span> vscode<span class="token punctuation">.</span>ExtensionContext<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    ctx<span class="token punctuation">.</span>subscriptions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
        vscode<span class="token punctuation">.</span>languages<span class="token punctuation">.</span><span class="token function">registerCodeLensProvider</span><span class="token punctuation">(</span>
            <span class="token constant">GO_MODE</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">GoCodeLensProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>基础</strong></p><p>定义当前文档可用的CodeLens结果</p></blockquote><blockquote><p><strong>进阶</strong></p><p>将CodeLens结果绑定到<code>codeLens/resolve</code>上</p></blockquote><h2 id="符号重命名" tabindex="-1"><a class="header-anchor" href="#符号重命名" aria-hidden="true">#</a> 符号重命名</h2><hr><p>运行用户重命名符号，更新所有引用的符号。</p><p><img src="https://raw.githubusercontent.com/Microsoft/vscode-docs/master/docs/extensionAPI/images/language-support/rename.gif" alt="rename"></p><h4 id="通过语言服务器实现-11" tabindex="-1"><a class="header-anchor" href="#通过语言服务器实现-11" aria-hidden="true">#</a> 通过语言服务器实现</h4><p>除了响应<code>initialize</code>方法外，语言服务器还要声明提供<em>重命名</em>特性。当然你的语言服务器还需要响应<code>textDocument/rename</code>请求。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    ...
    <span class="token property">&quot;capabilities&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;renameProvider&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;true&quot;</span>
        ...
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="直接实现-11" tabindex="-1"><a class="header-anchor" href="#直接实现-11" aria-hidden="true">#</a> 直接实现</h4><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">GoRenameProvider</span> <span class="token keyword">implements</span> <span class="token class-name">vscode</span><span class="token punctuation">.</span>RenameProvider <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">provideRenameEdits</span><span class="token punctuation">(</span>
        document<span class="token operator">:</span> vscode<span class="token punctuation">.</span>TextDocument<span class="token punctuation">,</span> position<span class="token operator">:</span> vscode<span class="token punctuation">.</span>Position<span class="token punctuation">,</span>
        newName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> token<span class="token operator">:</span> vscode<span class="token punctuation">.</span>CancellationToken<span class="token punctuation">)</span><span class="token operator">:</span>
        Thenable<span class="token operator">&lt;</span>vscode<span class="token punctuation">.</span>WorkspaceEdit<span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">activate</span><span class="token punctuation">(</span>ctx<span class="token operator">:</span> vscode<span class="token punctuation">.</span>ExtensionContext<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    ctx<span class="token punctuation">.</span>subscriptions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
        vscode<span class="token punctuation">.</span>languages<span class="token punctuation">.</span><span class="token function">registerRenameProvider</span><span class="token punctuation">(</span>
            <span class="token constant">GO_MODE</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">GoRenameProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>基础</strong></p><p>不提供重命名支持。</p></blockquote><blockquote><p><strong>进阶</strong></p><p>返回工作区所有需要执行更改的编辑区，例如：跨文件查找引用了相关符号的编辑区。</p></blockquote><h2 id="在编辑器中格式化源代码" tabindex="-1"><a class="header-anchor" href="#在编辑器中格式化源代码" aria-hidden="true">#</a> 在编辑器中格式化源代码</h2><hr><p>为用户提供整个文档的格式化特性。</p><p><img src="https://raw.githubusercontent.com/Microsoft/vscode-docs/master/docs/extensionAPI/images/language-support/format-document.gif" alt="format-document"></p><h4 id="通过语言服务器实现-12" tabindex="-1"><a class="header-anchor" href="#通过语言服务器实现-12" aria-hidden="true">#</a> 通过语言服务器实现</h4><p>除了响应<code>initialize</code>方法外，语言服务器还要声明提供<em>格式化</em>特性。当然你的语言服务器还需要响应<code>textDocument/formatting</code>请求。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    ...
    <span class="token property">&quot;capabilities&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;documentFormattingProvider&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;true&quot;</span>
        ...
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="直接实现-12" tabindex="-1"><a class="header-anchor" href="#直接实现-12" aria-hidden="true">#</a> 直接实现</h4><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">GoDocumentFormatter</span> <span class="token keyword">implements</span> <span class="token class-name">vscode</span><span class="token punctuation">.</span>DocumentFormattingEditProvider <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">formatDocument</span><span class="token punctuation">(</span>document<span class="token operator">:</span> vscode<span class="token punctuation">.</span>TextDocument<span class="token punctuation">)</span><span class="token operator">:</span>
        Thenable<span class="token operator">&lt;</span>vscode<span class="token punctuation">.</span>TextEdit<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">activate</span><span class="token punctuation">(</span>ctx<span class="token operator">:</span> vscode<span class="token punctuation">.</span>ExtensionContext<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    ctx<span class="token punctuation">.</span>subscriptions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
        vscode<span class="token punctuation">.</span>languages<span class="token punctuation">.</span><span class="token function">registerDocumentFormattingEditProvider</span><span class="token punctuation">(</span>
            <span class="token constant">GO_MODE</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">GoDocumentFormatter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>基础</strong></p><p>不提供格式化支持。</p></blockquote><blockquote><p><strong>进阶</strong></p><p>不管多小的文本区域都不要放过，尽可能地对文档进行格式化，这对诊断信息提示至关重要，不然可能导致代码错误位置不正确或者丢失报错标记。</p></blockquote><h2 id="对选中行进行格式化" tabindex="-1"><a class="header-anchor" href="#对选中行进行格式化" aria-hidden="true">#</a> 对选中行进行格式化</h2><hr><p>为用户提供选中片段的格式化特性。</p><p><img src="https://raw.githubusercontent.com/Microsoft/vscode-docs/master/docs/extensionAPI/images/language-support/format-document-range.gif" alt="format-document-range"></p><h4 id="通过语言服务器实现-13" tabindex="-1"><a class="header-anchor" href="#通过语言服务器实现-13" aria-hidden="true">#</a> 通过语言服务器实现</h4><p>除了响应<code>initialize</code>方法外，语言服务器还要声明提供<em>选中片段格式化</em>特性。当然你的语言服务器还需要响应<code>textDocument/rangeFormatting</code>请求。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    ...
    <span class="token property">&quot;capabilities&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;documentRangeFormattingProvider&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;true&quot;</span>
        ...
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="直接实现-13" tabindex="-1"><a class="header-anchor" href="#直接实现-13" aria-hidden="true">#</a> 直接实现</h4><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">GoDocumentRangeFormatter</span> <span class="token keyword">implements</span> <span class="token class-name">vscode</span><span class="token punctuation">.</span>DocumentRangeFormattingEditProvider<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">provideDocumentRangeFormattingEdits</span><span class="token punctuation">(</span>
        document<span class="token operator">:</span> vscode<span class="token punctuation">.</span>TextDocument<span class="token punctuation">,</span> range<span class="token operator">:</span> vscode<span class="token punctuation">.</span>Range<span class="token punctuation">,</span>
        options<span class="token operator">:</span> vscode<span class="token punctuation">.</span>FormattingOptions<span class="token punctuation">,</span> token<span class="token operator">:</span> vscode<span class="token punctuation">.</span>CancellationToken<span class="token punctuation">)</span><span class="token operator">:</span>
        Thenable<span class="token operator">&lt;</span>vscode<span class="token punctuation">.</span>TextEdit<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
    <span class="token operator">...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">activate</span><span class="token punctuation">(</span>ctx<span class="token operator">:</span> vscode<span class="token punctuation">.</span>ExtensionContext<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    ctx<span class="token punctuation">.</span>subscriptions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
        vscode<span class="token punctuation">.</span>languages<span class="token punctuation">.</span><span class="token function">registerDocumentRangeFormattingEditProvider</span><span class="token punctuation">(</span>
            <span class="token constant">GO_MODE</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">GoDocumentRangeFormatter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>基础</strong></p><p>不提供格式化支持。</p></blockquote><blockquote><p><strong>进阶</strong></p><p>不管多小的文本区域都不要放过，尽可能地对文档进行格式化，这对诊断信息提示至关重要，不然可能导致代码错误位置不正确或者丢失报错标记。</p></blockquote><h2 id="对用户输入自动格式化" tabindex="-1"><a class="header-anchor" href="#对用户输入自动格式化" aria-hidden="true">#</a> 对用户输入自动格式化</h2><hr><p>为用户提供输入时的实时格式化特性。</p><p><img src="https://raw.githubusercontent.com/Microsoft/vscode-docs/master/docs/extensionAPI/images/language-support/format-on-type.gif" alt="format-document-type"></p>`,162),G=s("strong",null,"注意",-1),M={href:"https://code.visualstudio.com/docs/getstarted/settings",target:"_blank",rel:"noopener noreferrer"},O=s("code",null,"editor.formatOnType",-1),A=e(`<h4 id="通过语言服务器实现-14" tabindex="-1"><a class="header-anchor" href="#通过语言服务器实现-14" aria-hidden="true">#</a> 通过语言服务器实现</h4><p>除了响应<code>initialize</code>方法外，语言服务器还要声明提供<em>用户输入格式化</em>特性。当然你的语言服务器还需要响应<code>textDocument/onTypeFormatting</code>请求。你还需要告诉客户端哪些字符可以触发这个特性，<code>moreTriggerCharacters</code>是个可选项。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    ...
    <span class="token property">&quot;capabilities&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;documentOnTypeFormattingProvider&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;firstTriggerCharacter&quot;</span><span class="token operator">:</span> <span class="token string">&quot;}&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;moreTriggerCharacter&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;,&quot;</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
        ...
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="直接实现-14" tabindex="-1"><a class="header-anchor" href="#直接实现-14" aria-hidden="true">#</a> 直接实现</h4><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">GoOnTypingFormatter</span> <span class="token keyword">implements</span> <span class="token class-name">vscode</span><span class="token punctuation">.</span>OnTypeFormattingEditProvider<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">provideOnTypeFormattingEdits</span><span class="token punctuation">(</span>
        document<span class="token operator">:</span> vscode<span class="token punctuation">.</span>TextDocument<span class="token punctuation">,</span> position<span class="token operator">:</span> vscode<span class="token punctuation">.</span>Position<span class="token punctuation">,</span>
        ch<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> options<span class="token operator">:</span> vscode<span class="token punctuation">.</span>FormattingOptions<span class="token punctuation">,</span> token<span class="token operator">:</span> vscode<span class="token punctuation">.</span>CancellationToken<span class="token punctuation">)</span><span class="token operator">:</span>
        Thenable<span class="token operator">&lt;</span>vscode<span class="token punctuation">.</span>TextEdit<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
    <span class="token operator">...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">activate</span><span class="token punctuation">(</span>ctx<span class="token operator">:</span> vscode<span class="token punctuation">.</span>ExtensionContext<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    ctx<span class="token punctuation">.</span>subscriptions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
        vscode<span class="token punctuation">.</span>languages<span class="token punctuation">.</span><span class="token function">registerOnTypeFormattingEditProvider</span><span class="token punctuation">(</span>
            <span class="token constant">GO_MODE</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">GoOnTypingFormatter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>基础</strong></p><p>不提供格式化支持。</p></blockquote><blockquote><p><strong>进阶</strong></p><p>不管多小的文本区域都不要放过，尽可能地对文档进行格式化，这对诊断信息提示至关重要，不然可能导致代码错误位置不正确或者丢失报错标记。</p></blockquote><h2 id="显示取色器" tabindex="-1"><a class="header-anchor" href="#显示取色器" aria-hidden="true">#</a> 显示取色器</h2><hr><p>允许用户预览和修改文档中的颜色。</p><p><img src="https://raw.githubusercontent.com/Microsoft/vscode-docs/master/docs/extensionAPI/images/language-support/color-decorators.png" alt="color-decorators"></p>`,11),I=s("strong",null,"注意",-1),S={href:"https://code.visualstudio.com/docs/getstarted/settings",target:"_blank",rel:"noopener noreferrer"},L=s("code",null,"editor.formatOnType",-1),F=e(`<h4 id="通过语言服务器实现-15" tabindex="-1"><a class="header-anchor" href="#通过语言服务器实现-15" aria-hidden="true">#</a> 通过语言服务器实现</h4><p>除了响应<code>initialize</code>方法外，语言服务器还要声明提供<em>用户输入格式化</em>特性。当然你的语言服务器还需要响应<code>textDocument/documentColor</code>和<code>textDocument/colorPresentation</code>请求。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    ...
    <span class="token property">&quot;capabilities&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;colorProvider&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;true&quot;</span>
        ...
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="直接实现-15" tabindex="-1"><a class="header-anchor" href="#直接实现-15" aria-hidden="true">#</a> 直接实现</h4><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">GoColorProvider</span> <span class="token keyword">implements</span> <span class="token class-name">vscode</span><span class="token punctuation">.</span>DocumentColorProvider <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">provideDocumentColors</span><span class="token punctuation">(</span>
        document<span class="token operator">:</span> vscode<span class="token punctuation">.</span>TextDocument<span class="token punctuation">,</span> token<span class="token operator">:</span> vscode<span class="token punctuation">.</span>CancellationToken<span class="token punctuation">)</span><span class="token operator">:</span>
        Thenable<span class="token operator">&lt;</span>vscode<span class="token punctuation">.</span>ColorInformation<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token function">provideColorPresentations</span><span class="token punctuation">(</span>
        color<span class="token operator">:</span> Color<span class="token punctuation">,</span> context<span class="token operator">:</span> <span class="token punctuation">{</span> document<span class="token operator">:</span> TextDocument<span class="token punctuation">,</span> range<span class="token operator">:</span> Range <span class="token punctuation">}</span><span class="token punctuation">,</span> token<span class="token operator">:</span> vscode<span class="token punctuation">.</span>CancellationToken<span class="token punctuation">)</span><span class="token operator">:</span>
        Thenable<span class="token operator">&lt;</span>vscode<span class="token punctuation">.</span>ColorPresentation<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">activate</span><span class="token punctuation">(</span>ctx<span class="token operator">:</span> vscode<span class="token punctuation">.</span>ExtensionContext<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    ctx<span class="token punctuation">.</span>subscriptions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
        vscode<span class="token punctuation">.</span>languages<span class="token punctuation">.</span><span class="token function">registerColorProvider</span><span class="token punctuation">(</span>
            <span class="token constant">GO_MODE</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">GoColorProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>基础</strong></p><p>返回文档中的色彩引用值。提供色彩格式和展示（如：rgb(...)，hsl(...)）</p></blockquote><blockquote><p><strong>进阶</strong></p><p>无</p></blockquote>`,7);function H(R,z){const o=c("RouterLink"),t=c("ExternalLinkIcon");return l(),u("div",null,[d,k,s("p",null,[n("通过适当地配置文件，语言插件可以语法高亮、代码片段和智能括号匹配，更多高级特性则可以通过VS Code的"),a(o,{to:"/extensibility-reference/vscode-api.html"},{default:p(()=>[n("扩展性API")]),_:1}),n("或者"),a(o,{to:"/extension-authoring/example-language-server.html"},{default:p(()=>[n("语言服务器")]),_:1}),n("来实现。")]),s("p",null,[n("语言服务器是一个使用"),s("a",v,[n("language server protocol"),a(t)]),n("通信的独立服务器。你能在适当的任务中使用适当的语言实现一个服务器，例如：你想支持一个非常棒的Python库，那你可能会想要用Python来实现你的语言服务器。如果你想要用Javascript或者Typescript实现语言服务器，那么直接用VS Code顶层的"),s("a",m,[n("npm modules"),a(t)]),n("构建即可。")]),b,s("p",null,[n("VS Code 通过语言标识符映射不同的语言配置和对应的语言实现。语言标识符是"),g,n("表示的编程语言或文件类型。例如，Javascript的语言ID是"),h,n("，而Markdown文件则是"),q,n("。已经支持的语言标识符可以在"),s("a",y,[n("这里"),a(t)]),n("找到。")]),f,s("p",null,[n("有了代码片段之后，你可以用占位符的形式提供源代码片段模板。在插件的"),x,n("中注册一个包含代码片段的文件。在"),s("a",w,[n("创建你自己的代码片段"),a(t)]),n("章节中学习更多VS Code代码片段协议。")]),P,s("p",null,[n("除上面介绍的语言特性外，剩下的特性需要写一些插件代码去处理VS Code的请求。你可以通过"),s("a",C,[n("language server protocol"),a(t)]),n("将插件实现为独立的服务器，或者直接在插件的"),_,n("方法内注册一个"),D,n("。这两种方法在接下的篇章里面会分别以"),j,n("和"),E,n("展示。")]),T,s("p",null,[n("!> "),G,n("：用户"),s("a",M,[n("设置"),a(t)]),n("中的"),O,n("控制着这项功能。")]),A,s("p",null,[n("!> "),I,n("：用户"),s("a",S,[n("设置"),a(t)]),n("中的"),L,n("控制着这项功能。")]),F])}const N=i(r,[["render",H],["__file","language-extension-guidelines.html.vue"]]);export{N as default};
