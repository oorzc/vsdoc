import{_ as t}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as p,c,a as n,b as s,d as a,e as o,r as i}from"./app.ed9f300c.js";const l={},r=n("h1",{id:"产品图标主题-预览",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#产品图标主题-预览","aria-hidden":"true"},"#"),s(" 产品图标主题（预览）")],-1),d=n("p",null,"VS Code 包含了大量内置图标，他们可以用在视图、编辑器、悬浮栏、状态栏，甚至插件中。文末的示例中演示了在过滤器按钮、视图按钮、状态栏、断点、树视图折叠按钮、编辑器中使用图标。",-1),u=n("p",null,[s("产品图标主题让插件可以自定义 VS Code 的整体外观。但是 "),n("em",null,"产品主题图标"),s(" 不包含文件图标（会被文件图标主题覆盖）和插件配置的图标。")],-1),v=n("p",null,"VS Code 要求图标一定是图标字体定义的字形，用于限制（当前）产品图标统一为一种颜色。图标的颜色可以在使用时，可被当前激活的主题色所修改。",-1),h=n("code",null,"enableProposedApi",-1),k={href:"https://code.visualstudio.com/insiders/",target:"_blank",rel:"noopener noreferrer"},m=o(`<h2 id="添加一个新的产品图标主题" tabindex="-1"><a class="header-anchor" href="#添加一个新的产品图标主题" aria-hidden="true">#</a> 添加一个新的产品图标主题</h2><p>在 <code>package.json</code> 中的 <code>productIconTheme</code> 配置产品图标主题</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;contributes&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;productIconTheme&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;aliensAreBack&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Aliens Are Back&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./producticons/aliens-product-icon-theme.json&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中 <code>id</code> 是这个产品图标主题的唯一标识。它会显示在设置中，所以你定义 <code>id</code> 时注意要有唯一性和可读性。 <code>label</code> 则会展示在产品图标主题选择下拉框中。<code>path</code> 则指向了插件定义图标系列的地方。如果你的文件名遵循 <code>*product-icon-theme.json</code> 的格式，那么你在编辑图标主题文件时，你就会获得代码补全和悬浮提示。</p><p>当你完成图标主题之后，你还得在<code>package.json</code>中加上下面的配置</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token property">&quot;enableProposedApi&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="产品图标定义文件" tabindex="-1"><a class="header-anchor" href="#产品图标定义文件" aria-hidden="true">#</a> 产品图标定义文件</h2><p>产品图标定义文件由一个或多个图标字体组成的图标定义集合的 JSON 文件。</p><h3 id="字体定义" tabindex="-1"><a class="header-anchor" href="#字体定义" aria-hidden="true">#</a> 字体定义</h3><p><code>font</code>部分可以声明一个以上的字形字体。 这些字体稍后会在图标定义文件中可以引用。如果图标定义不指定字体 ID，那么默认会使用第一个声明的字体。</p><p>将字体文件复制到你的插件里，然后设置好相应的路径。</p>`,11),b={href:"https://developer.mozilla.org/docs/Web/Guide/WOFF",target:"_blank",rel:"noopener noreferrer"},g=n("li",null,"设置字体格式为'woff'",-1),q={href:"https://developer.mozilla.org/docs/Web/CSS/font-weight#Values",target:"_blank",rel:"noopener noreferrer"},f={href:"https://developer.mozilla.org/docs/Web/CSS/@font-face/font-style#Values",target:"_blank",rel:"noopener noreferrer"},_=o(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;fonts&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;alien-font&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;src&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
          <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./alien.woff&quot;</span><span class="token punctuation">,</span>
          <span class="token property">&quot;format&quot;</span><span class="token operator">:</span> <span class="token string">&quot;woff&quot;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token property">&quot;weight&quot;</span><span class="token operator">:</span> <span class="token string">&quot;normal&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;style&quot;</span><span class="token operator">:</span> <span class="token string">&quot;normal&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="图标定义" tabindex="-1"><a class="header-anchor" href="#图标定义" aria-hidden="true">#</a> 图标定义</h3><p>VS Code 维护了一个被视图引用的图标ID列表，产品图标的 <code>iconDefinitions</code> 可以将新的图标设置到这些 ID 上。</p><p>每个定义都要使用 <code>fontId</code> 引用定义在 <code>fonts</code> 部分的字体，如果遗漏了 <code>fontId</code>，则会取字体定义中的首个字体。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;iconDefinitions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;dialog-close&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;fontCharacter&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\\\\43&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;fontId&quot;</span><span class="token operator">:</span> <span class="token string">&quot;alien-font&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),y={href:"https://code.visualstudio.com/api/references/icons-in-labels#icon-listing",target:"_blank",rel:"noopener noreferrer"},x=o('<h2 id="开发和测试" tabindex="-1"><a class="header-anchor" href="#开发和测试" aria-hidden="true">#</a> 开发和测试</h2><p>VS Code 为 <code>package.json</code> 内置了多种编辑特性。想在产品图标主题文件中启动这个功能，你的主题文件需要以 <code>product-icon-theme.json</code> 结尾。然后你就获得了所有属性的代码补全、悬浮提示和校验。</p><p>现在试一下产品图标主题，在 VS Code 中打开你的产品图标主题插件目录，然后按下<code>F5</code>，接着 VS Code 会启动插件开发主机并运行你的插件。这个窗口启用了你的插件，并且自动使用了第一个产品图标主题。</p><p>并且 VS Code 会监测主题文件的变动，任何图标的更新都会自动应用到 VS Code 界面上。只要你修改了产品图标定义文件，你就可以在界面上看到实时变化。</p><p>使用<strong>Preferences: Product Icon Theme</strong>切换产品图标主题。</p><p>想要知道 VS Code UI的某个图标到底用的是什么，打开<strong>Help &gt; Toggle Developer Tools</strong>然后：</p><ul><li>点击开发者工具左上角的检查工具</li><li>将鼠标移动到你想要检查的图标上</li><li>如果图标的类名是<code>codicon.codicon-remote</code>，那么这个图标的 ID 就是<code>remote</code></li></ul><p><img src="https://code.visualstudio.com/assets/api/extension-guides/product-icon-theme/dev-tool-select-tool.png" alt="dev-tool-select-tool"></p><h2 id="示例" tabindex="-1"><a class="header-anchor" href="#示例" aria-hidden="true">#</a> 示例</h2>',9),j={href:"https://github.com/microsoft/vscode-extension-samples/tree/master/product-icon-theme-sample",target:"_blank",rel:"noopener noreferrer"};function I(S,V){const e=i("ExternalLinkIcon");return p(),c("div",null,[r,d,u,v,n("p",null,[s("!> 注意：产品图标主题仍在预览阶段，其配置格式还会有所修改。在正式发布之前，如果插件需要定义产品图标主题，需要打开"),h,s("设置。你需要注意开发中的插件只能在 "),n("a",k,[s("Insider release"),a(e)]),s(" 版本中运行。同时，你无法将这类插件发布到市场上。")]),m,n("p",null,[s("我们建议你使用 "),n("a",b,[s("WOFF"),a(e)]),s(" 字体")]),n("ul",null,[g,n("li",null,[s("weight 属性值定义"),n("a",q,[s("在这"),a(e)])]),n("li",null,[s("style 属性值定义"),n("a",f,[s("在这"),a(e)])])]),_,n("p",null,[s("所有图标的 ID 可以在 "),n("a",y,[s("图标参考"),a(e)]),s(" 中查看")]),x,n("p",null,[n("a",j,[s("产品颜色主题示例"),a(e)]),s(" 可以供你体验和使用。")])])}const T=t(l,[["render",I],["__file","04.product-icon-theme.html.vue"]]);export{T as default};
