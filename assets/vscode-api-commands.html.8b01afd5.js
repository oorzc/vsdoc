import{_ as o}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as l,c as i,a as n,b as e,d as t,e as s,r as p}from"./app.ed9f300c.js";const c={},r=s(`<h1 id="复杂命令" tabindex="-1"><a class="header-anchor" href="#复杂命令" aria-hidden="true">#</a> 复杂命令</h1><p>本篇列出了VS Code中一系列的复杂命令。因为这些命令需要参数，还会返回一些值，所以我们称之为复杂命令。你可以通过<code>executeCommand</code>API，将各个命令联合起来使用。</p><p>下面是一个预览HTML文档的例子：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> uri <span class="token operator">=</span> Uri<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&#39;file:///some/path/to/file.html&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> success <span class="token operator">=</span> <span class="token keyword">await</span> commands<span class="token punctuation">.</span><span class="token function">executeCommand</span><span class="token punctuation">(</span><span class="token string">&#39;vscode.previewHtml&#39;</span><span class="token punctuation">,</span> uri<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="命令" tabindex="-1"><a class="header-anchor" href="#命令" aria-hidden="true">#</a> 命令</h2><hr><p><code>vscode.executeWorkspaceSymbolProvider</code> - 执行工作区全部的符号供应函数（symbol provider）</p><ul><li><em>query</em> - 搜索文本</li><li><em>(returns)</em> - promise函数，且返回SymbolInformation实例数组</li></ul><p><code>vscode.executeDefinitionProvider</code> - 执行全部定义供应函数。</p><ul><li><em>uri</em> - 文档的Uri</li><li><em>position</em> - 某个符号的位置</li><li><em>(returns)</em> - promise函数，且返回Location实例数组</li></ul><p><code>vscode.executeTypeDefinitionProvider</code> - 执行全部的定义供应器函数。</p><ul><li><em>uri</em> - 文档的Uri</li><li><em>position</em> - 某个符号的位置</li><li><em>(returns)</em> - promise函数，且返回Location实例数组</li></ul><p><code>vscode.executeImplementationProvider</code> - 执行全部的<strong>实现</strong>供应器函数。</p><ul><li><em>uri</em> - 文档的Uri</li><li><em>position</em> - 某个符号的位置</li><li><em>(returns)</em> - promise函数，且返回Location实例数组</li></ul><p><code>vscode.executeHoverProvider</code> - 执行全部的<strong>悬浮提示</strong>供应器函数。</p><ul><li><em>uri</em> - 文档的Uri</li><li><em>position</em> - 某个符号的位置</li><li><em>(returns)</em> - promise函数，且返回Hover实例数组</li></ul><p><code>vscode.executeDocumentHighlights</code> - 执行<strong>文档高亮</strong>供应器函数。</p><ul><li><em>uri</em> - 文档的Uri</li><li><em>position</em> - 某个符号的位置</li><li><em>(returns)</em> - promise函数，且返回DocumentHighlight实例数组</li></ul><p><code>vscode.executeReferenceProvider</code> - 执行<strong>引用</strong>供应器函数。</p><ul><li><em>uri</em> - 文档的Uri</li><li><em>position</em> - 某个符号的位置</li><li><em>(returns)</em> - promise函数，且返回Location实例数组</li></ul><p><code>vscode.executeDocumentRenameProvider</code> - 执行<strong>重命名</strong>供应器函数。</p><ul><li><em>uri</em> - 文档的Uri</li><li><em>position</em> - 某个符号的位置</li><li><em>newName</em> - 新符号的名称</li><li><em>(returns)</em> - promise函数，且返回WorkspaceEdit</li></ul><p><code>vscode.executeSignatureHelpProvider</code> - 执行<strong>符号帮助</strong>供应器函数。</p><ul><li><em>uri</em> - 文档的Uri</li><li><em>position</em> - 某个符号的位置</li><li><em>triggerCharacter</em> - (可选) 当用户输入特定字符时（如<code>,</code> 或 <code>(</code>）触发符号帮助</li><li><em>(returns)</em> - promise函数，且返回SignatureHelp</li></ul><p><code>vscode.executeDocumentSymbolProvider</code> - 执行<strong>文档符号</strong>供应器函数。</p><ul><li><em>uri</em> - 文档的Uri</li><li><em>(returns)</em> - promise函数，且返回SymbolInformation实例数组</li></ul><p><code>vscode.executeCompletionItemProvider</code> - 执行<strong>补全</strong>供应器函数。</p><ul><li><em>uri</em> - 文档的Uri</li><li><em>position</em> - 某个符号的位置</li><li><em>triggerCharacter</em> - (可选) 当用户输入特定字符时（如<code>,</code> 或 <code>(</code>）触发符号帮助</li><li><em>itemResolveCount</em> - (可选) 解析的补全数量 (该数字太大会减慢补全项解析的过程)</li><li><em>(returns)</em> - promise函数，且返回CompletionList实例数组</li></ul><p><code>vscode.executeCodeActionProvider</code> - 执行<strong>代码激活</strong>供应器函数。</p><ul><li><em>uri</em> - 文档的Uri</li><li><em>range</em> - 文本文档的范围</li><li><em>(returns)</em> - promise函数，且返回Command实例数组</li></ul><p><code>vscode.executeCodeLensProvider</code> - 执行CodeLens供应器函数。</p><ul><li><em>uri</em> - 文档的Uri</li><li><em>itemResolveCount</em> - (可选) 解析的结果数量，该配置可能会影响性能</li><li><em>(returns)</em> - promise函数，且返回CodeLens实例数组</li></ul><p><code>vscode.executeFormatDocumentProvider</code> - 执行<strong>文档格式化</strong>供应器函数。</p><ul><li><em>uri</em> - 文档的Uri</li><li><em>position</em> - 某个符号的位置</li><li><em>(returns)</em> - promise函数，且返回TextEdits实例数组</li></ul><p><code>vscode.executeFormatRangeProvider</code> - 执行<strong>范围格式化</strong>供应器函数。</p><ul><li><em>uri</em> - 文档的Uri</li><li><em>range</em> - 文本文档的范围</li><li><em>options</em> - 格式化选项</li><li><em>(returns)</em> - promise函数，且返回TextEdits实例数组</li></ul><p><code>vscode.executeFormatOnTypeProvider</code> - 执行<strong>文档格式化</strong>供应器函数。</p><ul><li><em>uri</em> - 文档的Uri</li><li><em>position</em> - 某个符号的位置</li><li><em>ch</em> - 输入的字符</li><li><em>options</em> - 格式化选项</li><li><em>(returns)</em> - promise函数，且返回TextEdits实例数组</li></ul><p><code>vscode.executeLinkProvider</code> - 执行<strong>文档链接</strong>供应器函数。</p><ul><li><em>uri</em> - 文档的Uri</li><li><em>(returns)</em> - * <em>(returns)</em> - promise函数，且返回DocumentLink实例数组</li></ul><p><code>vscode.executeDocumentColorProvider</code> - 执行<strong>文档色彩</strong>供应器函数。</p><ul><li><em>uri</em> - 文档的Uri</li><li><em>(returns)</em> - promise函数，且返回ColorInformation对象数组</li></ul><p><code>vscode.executeColorPresentationProvider</code> - 执行<strong>色彩呈现</strong>供应器函数。</p><ul><li><em>color</em> - 要显示和插入的颜色</li><li><em>context</em> - 上下文对象，包含uri和影响范围</li><li><em>(returns)</em> - promise函数，且返回ColorPresentation对象数组</li></ul><p><code>vscode.previewHtml</code> - 在编辑器窗口中渲染HTML</p><ul><li><em>uri</em> - 要预览的Uri</li><li><em>column</em> - (可选) 显示在窗口的哪一列</li><li><em>label</em> - (可选) 字符串，显示为预览的标题</li><li><em>options</em> - (可选) 控制webivew环境的选项</li></ul><p>查看 <a href="extensibility-reference/vscode-api-commands?id=%E4%BD%BF%E7%94%A8html-preview">使用HTML预览</a>章节获取更多最佳实践和插件创作的信息。</p><p><code>vscode.openFolder</code> - 在当前工作区打开文件夹，或者根据传入的参数打开新窗口</p><ul><li><em>uri</em> - (可选) 要打开的文件夹或者工作区文件。如果不提供的话，会打开一个原生对话框窗口给用户选择。</li><li><em>newWindow</em> - (可选) 是否在新窗口中打开文件夹/工作区。默认在当前窗口打开。</li></ul><p>!&gt; 注意：在当前窗口打开会关闭当前插件进程，然后根据新的文件夹/工作区启动新的插件进程，除非你配置了newWindow参数</p><p><code>vscode.diff</code> - 在diff编辑器中打开选中的源文件以便比较他们的内容。</p><ul><li><em>left</em> - diff编辑器左边的文件</li><li><em>right</em> - diff编辑器右边的文件</li><li><em>title</em> - (可选) diff编辑器的标题</li><li><em>options</em> - (可选) 编辑器选项，请查看vscode.TextDocumentShowOptions</li></ul><p><code>vscode.open</code> - 在编辑器中打开提供的资源文件</p><ul><li><em>resource</em> - 要打开的资源文件</li><li><em>columnOrOptions</em> - (可选) 可以是要打开的编辑器列，也可以是编辑器选项，查看 vscode.TextDocumentShowOptions</li></ul><p>可以是文本文件、二进制文件、http(s) url。如果你需要打开文本文件时的更多控制，请使用vscode.window.showTextDocument</p><p><code>vscode.removeFromRecentlyOpened</code> - 在最近打开的列表中移除一个路径。</p><ul><li><em>path</em> - 路径</li></ul><p><code>vscode.setEditorLayout</code> - 设置编辑器的布局</p><ul><li><em>layout</em> - 要设置的布局</li></ul><p>布局是一个对象，带有初始布局方向（可选，0 = 水平布局，1 = 垂直布局），还有一个包含编辑器组的数组。每个编辑器组又有一个尺寸和另一个数组，其中有矩形布局和方向信息。如果设置了编辑器组的大小，每一行或者每一列的总和必须为1。比如一个2x2的网格：<code>{ orientation: 0, groups: [{ groups: [{}, {}], size: 0.5 }, { groups: [{}, {}], size: 0.5 }] }</code></p><p><code>cursorMove</code> - 将鼠标指针移动到视图的逻辑位置上。</p><ul><li><p><em>Cursor move argument object</em></p><p>这个参数可以配置以下键值对：</p><ul><li>&#39;to&#39;: 必须，鼠标要移动到的逻辑坐标值<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&#39;left&#39;, &#39;right&#39;, &#39;up&#39;, &#39;down&#39;
&#39;wrappedLineStart&#39;, &#39;wrappedLineEnd&#39;, &#39;wrappedLineColumnCenter&#39;
&#39;wrappedLineFirstNonWhitespaceCharacter&#39;, &#39;wrappedLineLastNonWhitespaceCharacter&#39;
&#39;viewPortTop&#39;, &#39;viewPortCenter&#39;, &#39;viewPortBottom&#39;, &#39;viewPortIfOutside&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>&#39;by&#39;: 移动的单位，默认根据&#39;to&#39;值计算<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&#39;line&#39;, &#39;wrappedLine&#39;, &#39;character&#39;, &#39;halfLine&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>&#39;value&#39;: 步进数。默认为&#39;1&#39;</li><li>&#39;select&#39;: 设为&#39;true&#39;时则选中文本。默认是 &#39;false&#39;</li></ul></li></ul><p><code>editorScroll</code> - 给定方向，滚动编辑器</p><ul><li><p><em>Editor scroll argument object</em></p><p>这个参数可以配置以下键值对：</p><ul><li>&#39;to&#39;: 必须，方向的值<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&#39;up&#39;, &#39;down&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>&#39;by&#39;: 移动的单位。默认根据&#39;to&#39;值计算。<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&#39;line&#39;, &#39;wrappedLine&#39;, &#39;page&#39;, &#39;halfPage&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>&#39;value&#39;: 步进数。默认为&#39;1&#39;</li><li>&#39;revealCursor&#39;: 如果设为&#39;true&#39;，那么滚动超出视口时也显示鼠标.</li></ul></li></ul><p><code>revealLine</code> - 根据给定的逻辑位置显示行</p><ul><li><p><em>Reveal line argument object</em></p><p>这个参数可以配置以下键值对：</p><ul><li>&#39;lineNumber&#39;: 必须，行数</li><li>&#39;at&#39;: 显示行的逻辑位置<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&#39;top&#39;, &#39;center&#39;, &#39;bottom&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul></li></ul><p><code>editor.unfold</code> - 展开编辑器中的内容</p><ul><li><p><em>Unfold editor argument</em></p><p>这个参数可以配置以下键值对：</p><ul><li>&#39;levels&#39;: 展开的层级数。默认为1</li><li>&#39;direction&#39;: 如果设置为&#39;up&#39;，向上展开，不然向下展开</li><li>&#39;selectionLines&#39;: 要使用展开功能的起始行（从0起）。如果不设置，就会使用当前激活的行（选中区）.</li></ul></li></ul><p><code>editor.fold</code> - 折叠编辑器中的内容</p><ul><li><p><em>Fold editor argument</em></p><p>这个参数可以配置以下键值对：</p><ul><li>&#39;levels&#39;: 折叠的的层级数。默认为1</li><li>&#39;direction&#39;: 如果设置为&#39;up&#39;，向上折叠，不然向下折叠</li><li>&#39;selectionLines&#39;: 要使用折叠功能的起始行（从0起）。如果不设置，就会使用当前激活的行（选中区）.</li></ul><p><code>editor.action.showReferences</code> - 在同个文件中显示引用的位置</p></li><li><p><em>uri</em> - 要实现引用的文件</p></li><li><p><em>position</em> - 要显示的位置</p></li><li><p><em>locations</em> - 位置数组</p></li></ul><p><code>moveActiveEditor</code> - 依据标签或者组移动激活的编辑器</p><ul><li><p><em>Active editor move argument</em></p><p>参数值：</p><ul><li>&#39;to&#39;: String</li><li>&#39;by&#39;: String，移动的单位（标签：&#39;tab&#39;，组：&#39;group&#39;）</li><li>&#39;value&#39;: Number，要移动的位置或者绝对位置值</li></ul></li></ul><h2 id="使用html-preview" tabindex="-1"><a class="header-anchor" href="#使用html-preview" aria-hidden="true">#</a> 使用HTML Preview</h2><hr><h3 id="样式" tabindex="-1"><a class="header-anchor" href="#样式" aria-hidden="true">#</a> 样式</h3><p>VS Code会动态解析HTML 的Body元素，加上下列类标签<code>vscode-light</code>，<code>vscode-dark</code>，<code>vscode-high-contrast</code>，以便符合VS Code当前的主题。</p><h3 id="链接" tabindex="-1"><a class="header-anchor" href="#链接" aria-hidden="true">#</a> 链接</h3>`,77),u=n("code",null,"file",-1),d={href:"https://github.com/Microsoft/vscode/blob/master/src/vs/vscode.d.ts#L3295",target:"_blank",rel:"noopener noreferrer"},m=n("code",null,"command",-1),v=s(`<p>下面的片段展示了一个命令的链接形式:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>  <span class="token keyword">let</span> href <span class="token operator">=</span> <span class="token function">encodeURI</span><span class="token punctuation">(</span><span class="token string">&#39;command:vscode.previewHtml?&#39;</span> <span class="token operator">+</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>someUri<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> html <span class="token operator">=</span> <span class="token string">&#39;&lt;a href=&quot;&#39;</span> <span class="token operator">+</span> href <span class="token operator">+</span> <span class="token string">&#39;&quot;&gt;Show Resource...&lt;/a&gt;.&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="安全性小贴士" tabindex="-1"><a class="header-anchor" href="#安全性小贴士" aria-hidden="true">#</a> 安全性小贴士</h3><p>作为插件的创作者，如果你使用了HTML预览，那么你就要避免用户接触到恶意内容。最危险的是攻击者使用你的HTML预览伪造了一个工作区，然后执行脚本和一些不安全的行为。遵循WEB安全的最佳实践，下面的内容有助于保护用户。</p><h4 id="审查内容" tabindex="-1"><a class="header-anchor" href="#审查内容" aria-hidden="true">#</a> 审查内容</h4>`,5),k={href:"https://www.npmjs.com/package/sanitize-html",target:"_blank",rel:"noopener noreferrer"},g=s(`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">sandbox</span> <span class="token attr-name">srcdoc</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>&lt;!DOCTYPE html&gt;...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果你的预览需要一些本机内容，用 <code>sandbox=&quot;allow-same-origin&quot;</code>:</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">sandbox</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>allow-same-origin<span class="token punctuation">&quot;</span></span> <span class="token attr-name">srcdoc</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>&lt;!DOCTYPE html&gt;...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>sandbox=&quot;allow-same-origin&quot;</code> 禁用了<code>iframe</code>内的脚本执行，不过允许加载用户的本机内容，比如样式和图片。最好还是禁用所有本机资源访问，除非你确实需要加载一些东西。</p><h4 id="使用内容安全协议" tabindex="-1"><a class="header-anchor" href="#使用内容安全协议" aria-hidden="true">#</a> 使用内容安全协议</h4>`,5),h={href:"https://developer.mozilla.org/docs/Web/HTTP/CSP",target:"_blank",rel:"noopener noreferrer"},b=s(`<p>比如，下面的内容保护协议允许了任意来源的图片，用户本地的样式，但是禁用了全部脚本:</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Content-Security-Policy<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>default-src &#39;none&#39;; img-src *; style-src &#39;self&#39;; script-src &#39;none&#39;;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  Content
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),f={href:"https://developers.google.com/web/fundamentals/security/csp/",target:"_blank",rel:"noopener noreferrer"},x=s(`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Content-Security-Policy<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>default-src &#39;none&#39;; img-src *; style-src &#39;self&#39;; script-src &#39;nonce-123456&#39;;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  Content
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">nonce</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>123456<span class="token punctuation">&quot;</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>file:///path/to/extension/my_trusted_script.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function w(q,_){const a=p("ExternalLinkIcon");return l(),i("div",null,[r,n("p",null,[e("文档中的链接是VS Code来处理的，VS Code也支持"),u,e("和"),n("a",d,[e("virtual"),t(a)]),e("资源，还可以通过"),m,e("协议触发命令。使用JSON格式的参数传入command-uri。注意：URL必须要encode。")]),v,n("p",null,[e("作为防御的第一条，当你使用HTML预览时，请先审查来自工作区设置或者用户的文件系统的输入内容。对于HTML内容，最好使用安全的tag和attribute白名单。使用"),n("a",k,[e("sanitize-html"),t(a)]),e("库可以帮到你。")]),g,n("p",null,[e("如果你的预览需要一些脚本，请使用"),n("a",h,[e("content security policy"),t(a)]),e("禁用掉来自非可信用户的脚本。")]),b,n("p",null,[e("要想选择性地启动脚本，最好的方法是为白名单脚本动态生成"),n("a",f,[e("nonce"),t(a)]),e("：")]),x])}const L=o(c,[["render",w],["__file","vscode-api-commands.html.vue"]]);export{L as default};
