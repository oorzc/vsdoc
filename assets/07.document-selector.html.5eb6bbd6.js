import{_ as p}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c,a as n,b as s,d as t,e,r as i}from"./app.ed9f300c.js";const l={},u=n("h1",{id:"文档选择器",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#文档选择器","aria-hidden":"true"},"#"),s(" 文档选择器")],-1),r=n("p",null,"插件的特性可以通过语言、类型、位置等文档选择器类型加以筛选，本节将深入文档选择器、文档协议等插件创作者应该了解的内容。",-1),d=n("h2",{id:"不在磁盘上的文件",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#不在磁盘上的文件","aria-hidden":"true"},"#"),s(" 不在磁盘上的文件")],-1),k=n("hr",null,null,-1),v=n("strong",null,"所有",-1),m={href:"https://code.visualstudio.com/api/references/vscode-api#DocumentFilter",target:"_blank",rel:"noopener noreferrer"},h=n("code",null,"scheme",-1),g=n("code",null,"{ scheme: 'file', language: 'typescript' }",-1),b=n("h2",{id:"文档选择器-1",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#文档选择器-1","aria-hidden":"true"},"#"),s(" 文档选择器")],-1),f=n("hr",null,null,-1),_={href:"https://code.visualstudio.com/api/references/vscode-api#DocumentSelector",target:"_blank",rel:"noopener noreferrer"},y={href:"https://code.visualstudio.com/api/references/vscode-api#HoverProvider",target:"_blank",rel:"noopener noreferrer"},x=n("code",null,"typescript",-1),w=e(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>vscode<span class="token punctuation">.</span>languages<span class="token punctuation">.</span><span class="token function">registerHoverProvider</span><span class="token punctuation">(</span><span class="token string">&#39;typescript&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function">provideHover</span><span class="token punctuation">(</span>doc<span class="token operator">:</span> vscode<span class="token punctuation">.</span>TextDocument<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">vscode</span><span class="token punctuation">.</span><span class="token function">Hover</span><span class="token punctuation">(</span><span class="token string">&#39;For *all* TypeScript documents.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),H=n("code",null,"协议(scheme)",-1),S={href:"https://code.visualstudio.com/api/references/vscode-api#DocumentFilter",target:"_blank",rel:"noopener noreferrer"},T=n("code",null,"pattern",-1),D=e(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>vscode<span class="token punctuation">.</span>languages<span class="token punctuation">.</span><span class="token function">registerHoverProvider</span><span class="token punctuation">(</span>
  <span class="token punctuation">{</span> pattern<span class="token operator">:</span> <span class="token string">&#39;**/test/**&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token function">provideHover</span><span class="token punctuation">(</span>doc<span class="token operator">:</span> vscode<span class="token punctuation">.</span>TextDocument<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">vscode</span><span class="token punctuation">.</span><span class="token function">Hover</span><span class="token punctuation">(</span><span class="token string">&#39;For documents inside \`test\`-folders only&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下面这个片段, 使用合并后的<code>协议(scheme)</code>过滤器和语言标识符作为参数. <code>未命名的(untitled)</code>协议正是为暂未保存到本地磁盘的文件准备的.</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>vscode<span class="token punctuation">.</span>languages<span class="token punctuation">.</span><span class="token function">registerHoverProvider</span><span class="token punctuation">(</span>
  <span class="token punctuation">{</span> scheme<span class="token operator">:</span> <span class="token string">&#39;untitled&#39;</span><span class="token punctuation">,</span> language<span class="token operator">:</span> <span class="token string">&#39;typescript&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token function">provideHover</span><span class="token punctuation">(</span>doc<span class="token operator">:</span> vscode<span class="token punctuation">.</span>TextDocument<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">vscode</span><span class="token punctuation">.</span><span class="token function">Hover</span><span class="token punctuation">(</span><span class="token string">&#39;For new, unsaved TypeScript documents only&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="文档协议" tabindex="-1"><a class="header-anchor" href="#文档协议" aria-hidden="true">#</a> 文档协议</h2><hr><p><code>文档协议</code>经常会被忽视, 但是它提供了很重要的信息. 插件开发者经常假设自己正在处理的文档也是存在磁盘上的. 用一个简单的<code>typescript</code>选择器做个例子, 假设<strong>Typescript文件在磁盘上</strong>, 不过大部分开发场景都过于宽松了，使用了诸如<code>{ scheme: &#39;file&#39;, language: &#39;typescript&#39; }</code>显式的选择器。</p><p>当某项功能依赖于从磁盘上读/写文件时, 这个问题显得尤为重要. 请看下面的代码:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 👎 too lax</span>
vscode<span class="token punctuation">.</span>languages<span class="token punctuation">.</span><span class="token function">registerHoverProvider</span><span class="token punctuation">(</span><span class="token string">&#39;typescript&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function">provideHover</span><span class="token punctuation">(</span>doc<span class="token operator">:</span> vscode<span class="token punctuation">.</span>TextDocument<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> size <span class="token punctuation">}</span> <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">statSync</span><span class="token punctuation">(</span>doc<span class="token punctuation">.</span>uri<span class="token punctuation">.</span>fsPath<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ⚠️ what about &#39;untitled:/Untitled1.ts&#39; or others?</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">vscode</span><span class="token punctuation">.</span><span class="token function">Hover</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Size in bytes is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>size<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的例子中, 悬浮提示器想展示文件占用的磁盘大小, 但是它不会检查文档是不是真的存储在磁盘上. 比如, 一个新创建但是未保存的文件. 正确的做法是告诉VS Code只在文件存储在磁盘上时才开始工作.</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 👍 only works with files on disk</span>
vscode<span class="token punctuation">.</span>languages<span class="token punctuation">.</span><span class="token function">registerHoverProvider</span><span class="token punctuation">(</span>
  <span class="token punctuation">{</span> scheme<span class="token operator">:</span> <span class="token string">&#39;file&#39;</span><span class="token punctuation">,</span> language<span class="token operator">:</span> <span class="token string">&#39;typescript&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token function">provideHover</span><span class="token punctuation">(</span>doc<span class="token operator">:</span> vscode<span class="token punctuation">.</span>TextDocument<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span> size <span class="token punctuation">}</span> <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">statSync</span><span class="token punctuation">(</span>doc<span class="token punctuation">.</span>uri<span class="token punctuation">.</span>fsPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">vscode</span><span class="token punctuation">.</span><span class="token function">Hover</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Size in bytes is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>size<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><hr><p>文档通常都储存在文件系统中，但也有例外：未保存的新文件、Git使用的缓存文件、FTP上的远程文件等等。如果你的插件特性依赖于磁盘读取，那么你就要用文档选择器时应带上file协议。</p><h2 id="下一步" tabindex="-1"><a class="header-anchor" href="#下一步" aria-hidden="true">#</a> 下一步</h2><p>阅读下列文章来了解更多有关于VS Code可拓展模型的知识.</p><ul><li><a href="/references/extension-manifest">插件清单</a> - VS Code的package.json(插件清单)文件配置相关</li><li><a href="/references/contribution-points">发布内容配置</a> - VS Code发布内容相关</li></ul>`,16);function P(V,F){const a=i("ExternalLinkIcon");return o(),c("div",null,[u,r,d,k,n("p",null,[s("并不是所有文件都是储存在磁盘上的，比如一份刚刚创建的文件。除非特别指明，文档选择器通常会应用于"),v,s("文档类型。使用"),n("a",m,[s("DocumentFilter"),t(a)]),s("的"),h,s("属性将协议范围缩小，比如说，"),g,s("是特定的用于储存在磁盘上的TypeScript文件。")]),b,f,n("p",null,[s("VS Code插件API结合了特定的语言特性, 通过文档选择器的"),n("a",_,[s("DocumentSelector"),t(a)]),s("类型, 可以支持例如智能感知(IntelliSense)等特性. 这是实现特定语言所支持特性的最为简单的机制.")]),n("p",null,[s("下面的片段注册了一个Typescript文件的"),n("a",y,[s("HoverProvider"),t(a)]),s(", 此时的文档选择器是"),x,s("语言标识符.")]),w,n("p",null,[s("文档选择器可以不只是一个语言标识符, 还可以是复杂选择器——比如基于"),H,s("和文件路径的"),n("a",S,[s("DocumentFilter"),t(a)]),s(", 文件路径支持"),T,s("参数和glob模式:")]),D])}const I=p(l,[["render",P],["__file","07.document-selector.html.vue"]]);export{I as default};
