import{_ as p}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as e,c,a as s,b as n,d as t,e as o,r as u}from"./app.ed9f300c.js";const i={},l=o('<h1 id="语言配置" tabindex="-1"><a class="header-anchor" href="#语言配置" aria-hidden="true">#</a> 语言配置</h1><p>通过<a href="/extensibility-reference/contribution-points#contributeslanguages"><code>contributes.languages</code></a>发布内容配置，你可以配置以下<em>声明式语言特性</em>：</p><ul><li>启用/关闭注释</li><li>定义括号</li><li>自动闭合符号</li><li>自动环绕符号</li><li>代码折叠</li><li>单词匹配</li><li>缩进规则</li></ul>',3),r={href:"https://github.com/Microsoft/vscode-extension-samples/tree/master/language-configuration-sample",target:"_blank",rel:"noopener noreferrer"},k=s("code",null,"language-configuration.json",-1),d=o(`<p>!&gt; <strong>注意</strong>：如果你的语言配置文件以**<code>language-configuration.json</code>**结尾，那么VS Code会帮你添加代码补全和校验功能。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
	<span class="token property">&quot;comments&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token property">&quot;lineComment&quot;</span><span class="token operator">:</span> <span class="token string">&quot;//&quot;</span><span class="token punctuation">,</span>
		<span class="token property">&quot;blockComment&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;/*&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;*/&quot;</span><span class="token punctuation">]</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token property">&quot;brackets&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&quot;{&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;}&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;[&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;]&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;(&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;)&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
	<span class="token property">&quot;autoClosingPairs&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
		<span class="token punctuation">{</span> <span class="token property">&quot;open&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;close&quot;</span><span class="token operator">:</span> <span class="token string">&quot;}&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span> <span class="token property">&quot;open&quot;</span><span class="token operator">:</span> <span class="token string">&quot;[&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;close&quot;</span><span class="token operator">:</span> <span class="token string">&quot;]&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span> <span class="token property">&quot;open&quot;</span><span class="token operator">:</span> <span class="token string">&quot;(&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;close&quot;</span><span class="token operator">:</span> <span class="token string">&quot;)&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span> <span class="token property">&quot;open&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;close&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;notIn&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;comment&quot;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span> <span class="token property">&quot;open&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\\&quot;&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;close&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\\&quot;&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;notIn&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;string&quot;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span> <span class="token property">&quot;open&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\`&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;close&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\`&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;notIn&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;comment&quot;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span> <span class="token property">&quot;open&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/**&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;close&quot;</span><span class="token operator">:</span> <span class="token string">&quot; */&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;notIn&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;string&quot;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span>
	<span class="token punctuation">]</span><span class="token punctuation">,</span>
	<span class="token property">&quot;autoCloseBefore&quot;</span><span class="token operator">:</span> <span class="token string">&quot;;:.,=}])&gt;\` \\n\\t&quot;</span><span class="token punctuation">,</span>
	<span class="token property">&quot;surroundingPairs&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
		<span class="token punctuation">[</span><span class="token string">&quot;{&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;}&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
		<span class="token punctuation">[</span><span class="token string">&quot;[&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;]&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
		<span class="token punctuation">[</span><span class="token string">&quot;(&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;)&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
		<span class="token punctuation">[</span><span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
		<span class="token punctuation">[</span><span class="token string">&quot;\\&quot;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\\&quot;&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
		<span class="token punctuation">[</span><span class="token string">&quot;\`&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\`&quot;</span><span class="token punctuation">]</span>
	<span class="token punctuation">]</span><span class="token punctuation">,</span>
	<span class="token property">&quot;folding&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token property">&quot;markers&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
			<span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^\\\\s*//\\\\s*#?region\\\\b&quot;</span><span class="token punctuation">,</span>
			<span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^\\\\s*//\\\\s*#?endregion\\\\b&quot;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token property">&quot;wordPattern&quot;</span><span class="token operator">:</span> <span class="token string">&quot;(-?\\\\d*\\\\.\\\\d\\\\w*)|([^\\\\\`\\\\~\\\\!\\\\@\\\\#\\\\%\\\\^\\\\&amp;\\\\*\\\\(\\\\)\\\\-\\\\=\\\\+\\\\[\\\\{\\\\]\\\\}\\\\\\\\\\\\|\\\\;\\\\:\\\\&#39;\\\\\\&quot;\\\\,\\\\.\\\\&lt;\\\\&gt;\\\\/\\\\?\\\\s]+)&quot;</span><span class="token punctuation">,</span>
	<span class="token property">&quot;indentationRules&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token property">&quot;increaseIndentPattern&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^((?!\\\\/\\\\/).)*(\\\\{[^}\\&quot;&#39;\`]*|\\\\([^)\\&quot;&#39;\`]*|\\\\[[^\\\\]\\&quot;&#39;\`]*)$&quot;</span><span class="token punctuation">,</span>
		<span class="token property">&quot;decreaseIndentPattern&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^((?!.*?\\\\/\\\\*).*\\\\*/)?\\\\s*[\\\\}\\\\]].*$&quot;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="启用-关闭注释" tabindex="-1"><a class="header-anchor" href="#启用-关闭注释" aria-hidden="true">#</a> 启用/关闭注释</h2><hr><p>VS Code提供了切换注释开关的命令：</p><ul><li><strong>Toggle Line Comment</strong></li><li><strong>Toggle Block Comment</strong></li></ul><p>分别来配置<code>comments.lineComment</code>控制块注释和<code>comments.blockComment</code>控制行注释。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
	<span class="token property">&quot;comments&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token property">&quot;lineComment&quot;</span><span class="token operator">:</span> <span class="token string">&quot;//&quot;</span><span class="token punctuation">,</span>
		<span class="token property">&quot;blockComment&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;/*&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;*/&quot;</span><span class="token punctuation">]</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="定义括号" tabindex="-1"><a class="header-anchor" href="#定义括号" aria-hidden="true">#</a> 定义括号</h2><hr><p>你在VS Code中将鼠标移动到一个括号边上时，VS Code会自动高亮对应的括号。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
	<span class="token property">&quot;brackets&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&quot;{&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;}&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;[&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;]&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;(&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;)&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>另外，当你运行<strong>Go to Bracket</strong>或<strong>Select to Bracket</strong>时，VS Code会自动使用你的定义找到最近、最匹配的括号。</p><h2 id="自动闭合符号" tabindex="-1"><a class="header-anchor" href="#自动闭合符号" aria-hidden="true">#</a> 自动闭合符号</h2><hr><p>当你输入<code>&#39;</code>时，VS Code会自动帮你补全另一个单引号然后将光标放在引号中间，我们来看看是怎么做的：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
	<span class="token property">&quot;autoClosingPairs&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
		<span class="token punctuation">{</span> <span class="token property">&quot;open&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;close&quot;</span><span class="token operator">:</span> <span class="token string">&quot;}&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span> <span class="token property">&quot;open&quot;</span><span class="token operator">:</span> <span class="token string">&quot;[&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;close&quot;</span><span class="token operator">:</span> <span class="token string">&quot;]&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span> <span class="token property">&quot;open&quot;</span><span class="token operator">:</span> <span class="token string">&quot;(&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;close&quot;</span><span class="token operator">:</span> <span class="token string">&quot;)&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span> <span class="token property">&quot;open&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;close&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;notIn&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;comment&quot;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span> <span class="token property">&quot;open&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\\&quot;&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;close&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\\&quot;&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;notIn&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;string&quot;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span> <span class="token property">&quot;open&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\`&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;close&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\`&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;notIn&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;comment&quot;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span> <span class="token property">&quot;open&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/**&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;close&quot;</span><span class="token operator">:</span> <span class="token string">&quot; */&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;notIn&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;string&quot;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span>
	<span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置<code>notIn</code>键（key）可以在你需要的时候关闭这个功能。比如你在写下面的代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// ES6&#39;s Template String</span>
<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">ES6&#39;s Template String</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>此时单引号就不会闭合。</p><p>用户可以使用<code>editor.autoClosingQuotes</code>和<code>editor.autoClosingBrackets</code>设置<em>自动闭合符号</em>的行为。</p><h4 id="在xxx前闭合符号" tabindex="-1"><a class="header-anchor" href="#在xxx前闭合符号" aria-hidden="true">#</a> 在XXX前闭合符号</h4><p>如果符号的右边有空白，那么VS Code默认会启用符号闭合，所以当你在JSX代码中输入<code>{</code>时，符号并不会闭合：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">Component</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token punctuation">{</span><span class="token operator">&gt;</span>
                  <span class="token operator">^</span> <span class="token constant">VS</span> Code默认不会闭合此处的括号
  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>但是你可以用下面的定义覆盖默认行为：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
	<span class="token property">&quot;autoCloseBefore&quot;</span><span class="token operator">:</span> <span class="token string">&quot;;:.,=}])&gt;\` \\n\\t&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在如果你在<code>&gt;</code>前面输入<code>{</code>，VS Code会自动补全<code>}</code>。</p><h2 id="自动环绕符号" tabindex="-1"><a class="header-anchor" href="#自动环绕符号" aria-hidden="true">#</a> 自动环绕符号</h2><hr><p>当你选择了一堆文本然后输入左括号时，VS Code会对选中内容外围加上对应的括号。这个功能叫做<em>自动环绕符号</em>，你可以参考下面的代码指定这项功能：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
	<span class="token property">&quot;surroundingPairs&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
		<span class="token punctuation">[</span><span class="token string">&quot;{&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;}&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
		<span class="token punctuation">[</span><span class="token string">&quot;[&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;]&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
		<span class="token punctuation">[</span><span class="token string">&quot;(&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;)&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
		<span class="token punctuation">[</span><span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
		<span class="token punctuation">[</span><span class="token string">&quot;\\&quot;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\\&quot;&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
		<span class="token punctuation">[</span><span class="token string">&quot;\`&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\`&quot;</span><span class="token punctuation">]</span>
	<span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意用户可以通过<code>editor.autoSurround</code>设置<em>自动环绕符号</em>的行为。</p><h2 id="代码折叠" tabindex="-1"><a class="header-anchor" href="#代码折叠" aria-hidden="true">#</a> 代码折叠</h2><hr><p>在VS Code中有三种代码折叠类型：</p><ul><li>缩进折叠：这是VS Code中默认的缩进行为，当两行内容有着相同的缩进级别时，你就可以看到折叠标记了。</li><li>语言配置折叠：当VS Code发现<code>folding.markers</code>同时定义了<code>start</code>和<code>end</code>时，对应区域内就会出现折叠标记。下述配置会对<code>//#region</code>和<code>//#endregionJSON</code>区域创建代码折叠标记：</li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
	<span class="token property">&quot;folding&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token property">&quot;markers&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
			<span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^\\\\s*//\\\\s*#?region\\\\b&quot;</span><span class="token punctuation">,</span>
			<span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^\\\\s*//\\\\s*#?endregion\\\\b&quot;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,37),q={href:"https://microsoft.github.io/language-server-protocol/specification#textDocument_foldingRange",target:"_blank",rel:"noopener noreferrer"},v=s("a",{href:"/language-extensions/programmatic-language-features"},"程序性语言特性",-1),g=o(`<h2 id="单词匹配" tabindex="-1"><a class="header-anchor" href="#单词匹配" aria-hidden="true">#</a> 单词匹配</h2><hr><p><code>wordPattern</code>定义了程序语言中<em>单词</em>单位。因此当你使用词语相关的命令，如：<strong>Move cursor to word start</strong>（<kbd>Ctrl+Left</kbd>）或者<strong>Move cursor to word end</strong>（<kbd>Ctrl+Right</kbd>）时，编辑器会根据正则寻找单词边界。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
	<span class="token property">&quot;wordPattern&quot;</span><span class="token operator">:</span> <span class="token string">&quot;(-?\\\\d*\\\\.\\\\d\\\\w*)|([^\\\\\`\\\\~\\\\!\\\\@\\\\#\\\\%\\\\^\\\\&amp;\\\\*\\\\(\\\\)\\\\-\\\\=\\\\+\\\\[\\\\{\\\\]\\\\}\\\\\\\\\\\\|\\\\;\\\\:\\\\&#39;\\\\\\&quot;\\\\,\\\\.\\\\&lt;\\\\&gt;\\\\/\\\\?\\\\s]+)&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="缩进规则" tabindex="-1"><a class="header-anchor" href="#缩进规则" aria-hidden="true">#</a> 缩进规则</h2><hr><p><code>indentationRules</code>定义了编辑器应该如何调整当前行或你粘贴、输入、移动的下一行缩进。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
	<span class="token property">&quot;indentationRules&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token property">&quot;increaseIndentPattern&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^((?!\\\\/\\\\/).)*(\\\\{[^}\\&quot;&#39;\`]*|\\\\([^)\\&quot;&#39;\`]*|\\\\[[^\\\\]\\&quot;&#39;\`]*)$&quot;</span><span class="token punctuation">,</span>
		<span class="token property">&quot;decreaseIndentPattern&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^((?!.*?\\\\/\\\\*).*\\\\*/)?\\\\s*[\\\\)\\\\}\\\\]].*$&quot;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>比如，<code>if (true) {</code>匹配<code>increasedIndentPattern</code>，然后如果你在<code>{</code>后面按下<kbd>Enter</kbd>后，编辑器会自动缩进一次，你如代码看起来会像这样：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果没有设置缩进规则，当行尾以开符号结尾时编辑器会左缩进，以闭合符号结尾时右缩进。这里的<em>开闭符号</em>由<code>brackets</code>定义。</p>`,11),m=s("code",null,"editor.formatOnPaste",-1),b={href:"https://code.visualstudio.com/api/references/vscode-api#DocumentRangeFormattingEditProvider",target:"_blank",rel:"noopener noreferrer"};function h(y,f){const a=u("ExternalLinkIcon");return e(),c("div",null,[l,s("p",null,[s("a",r,[n("语言配置示例"),t(a)]),n("中配置JavaScript文件中的编辑功能。本篇指南会详细解释"),k,n("中的内容：")]),d,s("ul",null,[s("li",null,[n("语言服务器折叠：语言服务器获取到"),s("a",q,[n("textDocument/foldingRange"),t(a)]),n("请求中的代码折叠列表数据，VS Code之后根据这份列表创建折叠标记。通过语言服务器协议学习更多关于"),v,n("。")])]),g,s("p",null,[n("注意"),m,n("是由"),s("a",b,[n("DocumentRangeFormattingEditProvider"),t(a)]),n("控制，而不由自动缩进控制。")])])}const _=p(i,[["render",h],["__file","04.language-configuration-guide.html.vue"]]);export{_ as default};
