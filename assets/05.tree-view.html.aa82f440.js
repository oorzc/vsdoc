import{_ as o}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as p,c as i,a as n,b as s,d as a,e as t,r as c}from"./app.ed9f300c.js";const r={},l=n("h1",{id:"树视图",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#树视图","aria-hidden":"true"},"#"),s(" 树视图")],-1),u=n("em",null,"视图容器",-1),d=n("em",null,"树视图",-1),v={href:"https://github.com/Microsoft/vscode-extension-samples/tree/master/tree-view-sample",target:"_blank",rel:"noopener noreferrer"},k=t(`<h2 id="视图容器" tabindex="-1"><a class="header-anchor" href="#视图容器" aria-hidden="true">#</a> 视图容器</h2><hr><p><em>视图容器</em>包含了一列<em>视图(views)</em>，这些<em>视图</em>又包含在内置的<em>视图容器</em>中。</p><p><img src="https://media.githubusercontent.com/media/Microsoft/vscode-docs/master/api/extension-guides/images/tree-view/view-container.png" alt="view-container"></p><p>要想配置一个视图容器，你首先得注册<code>package.json</code>中的<a href="/references/contribution-points#contributesviewscontainers"><code>contributes.viewsContainers</code></a>。你还必须配置以下字段：</p><ul><li><code>id</code>: 新视图容器的名称</li><li><code>title</code>: 展示给用户的视图容器名称，它会显示在视图容器上方</li><li><code>icon</code>: 在活动栏中展示的图标</li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token property">&quot;contributes&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token property">&quot;viewsContainers&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;activitybar&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;package-explorer&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Package Explorer&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;icon&quot;</span><span class="token operator">:</span> <span class="token string">&quot;media/dep.svg&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="树视图-1" tabindex="-1"><a class="header-anchor" href="#树视图-1" aria-hidden="true">#</a> 树视图</h2><hr><p><em>视图</em>是显示在视图容器中的UI片段。使用<a href="/references/contribution-points#contributesviews"><code>contributes.views</code></a>进行配置，你就可以将新的<em>视图</em>添加到内置或者你配置好的视图容器中了。</p><p><img src="https://media.githubusercontent.com/media/Microsoft/vscode-docs/master/api/extension-guides/images/tree-view/view.png" alt="view"></p><p>要想配置一个<em>视图</em>，你首先得注册<code>package.json</code>中的<a href="/references/vscode-api"><code>contributes.views</code></a>。你必须给<em>视图</em>配置一个ID外加一个名称，你还可以配置<em>视图</em>出现的位置：</p><ul><li><code>explorer</code>: 显示在资源管理器侧边栏</li><li><code>debug</code>: 显示在调试侧边栏</li><li><code>scm</code>: 显示在源代码侧边栏</li><li><code>test</code>: 测试侧边栏中的资源管理器视图</li><li>显示在你定义好的<em>视图容器</em>中</li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token property">&quot;contributes&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token property">&quot;views&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;package-explorer&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;nodeDependencies&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Node Dependencies&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;when&quot;</span><span class="token operator">:</span> <span class="token string">&quot;explorer&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当用户打开了对应的视图，VS Code会触发<a href="/references/activation-events?id=onview"><code>onView:\${viewId}</code></a>事件(如上面例子中，这个事件写为<code>onView:nodeDependencies</code>)。你也可以通过配置<code>when</code>字段控制视图的展示。</p><h2 id="视图的操作" tabindex="-1"><a class="header-anchor" href="#视图的操作" aria-hidden="true">#</a> 视图的操作</h2><hr><p>你可以配置<em>视图</em>下述位置的操作：</p><ul><li><code>view/title</code>: <em>视图</em>标题位置显示的操作。这里可以配置主要的操作，使用<code>&quot;group&quot;: &quot;navigation&quot;</code>进行配置，剩余的二级操作则出现在<code>...</code>菜单中。</li><li><code>view/item/context</code>: 每个<em>视图项</em>的操作。这里可以配置主要的操作，使用<code>&quot;group&quot;: &quot;inline&quot;</code>，剩余的二级操作则出现在<code>...</code>菜单中。</li></ul><p>使用<code>when</code>属性控制这些操作的展示。</p><p><img src="https://media.githubusercontent.com/media/Microsoft/vscode-docs/master/api/extension-guides/images/tree-view/view-actions.png" alt="view-actions"></p><p>例如：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token property">&quot;contributes&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token property">&quot;commands&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;command&quot;</span><span class="token operator">:</span> <span class="token string">&quot;nodeDependencies.refreshEntry&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Refresh&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;icon&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;light&quot;</span><span class="token operator">:</span> <span class="token string">&quot;resources/light/refresh.svg&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;dark&quot;</span><span class="token operator">:</span> <span class="token string">&quot;resources/dark/refresh.svg&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;command&quot;</span><span class="token operator">:</span> <span class="token string">&quot;nodeDependencies.addEntry&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Add&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;command&quot;</span><span class="token operator">:</span> <span class="token string">&quot;nodeDependencies.editEntry&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Edit&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;icon&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;light&quot;</span><span class="token operator">:</span> <span class="token string">&quot;resources/light/edit.svg&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;dark&quot;</span><span class="token operator">:</span> <span class="token string">&quot;resources/dark/edit.svg&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;command&quot;</span><span class="token operator">:</span> <span class="token string">&quot;nodeDependencies.deleteEntry&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Delete&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;menus&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;view/title&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token property">&quot;command&quot;</span><span class="token operator">:</span> <span class="token string">&quot;nodeDependencies.refreshEntry&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;when&quot;</span><span class="token operator">:</span> <span class="token string">&quot;view == nodeDependencies&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;group&quot;</span><span class="token operator">:</span> <span class="token string">&quot;navigation&quot;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token property">&quot;command&quot;</span><span class="token operator">:</span> <span class="token string">&quot;nodeDependencies.addEntry&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;when&quot;</span><span class="token operator">:</span> <span class="token string">&quot;view == nodeDependencies&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">&quot;view/item/context&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token property">&quot;command&quot;</span><span class="token operator">:</span> <span class="token string">&quot;nodeDependencies.editEntry&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;when&quot;</span><span class="token operator">:</span> <span class="token string">&quot;view == nodeDependencies &amp;&amp; viewItem == dependency&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;group&quot;</span><span class="token operator">:</span> <span class="token string">&quot;inline&quot;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token property">&quot;command&quot;</span><span class="token operator">:</span> <span class="token string">&quot;nodeDependencies.deleteEntry&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;when&quot;</span><span class="token operator">:</span> <span class="token string">&quot;view == nodeDependencies &amp;&amp; viewItem == dependency&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>!&gt; <strong>注意</strong>：如果你需要针对特定的条目显示特殊的操作，定义树视图项的<code>TreeItem.contextValue</code>，并且在<code>when</code>中使用表达式，视图项的值储存在表达式的<code>viewItem</code>中。</p><p>如：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token property">&quot;contributes&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token property">&quot;menus&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;view/item/context&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token property">&quot;command&quot;</span><span class="token operator">:</span> <span class="token string">&quot;nodeDependencies.deleteEntry&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;when&quot;</span><span class="token operator">:</span> <span class="token string">&quot;view == nodeDependencies &amp;&amp; viewItem == dependency&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="为树视图提供数据" tabindex="-1"><a class="header-anchor" href="#为树视图提供数据" aria-hidden="true">#</a> 为树视图提供数据</h2><hr>`,28),m={href:"https://code.visualstudio.com/api/references/vscode-api#TreeDataProvider",target:"_blank",rel:"noopener noreferrer"},q=n("code",null,"TreeDataProvider",-1),b=n("em",null,"视图",-1),g=t(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>vscode<span class="token punctuation">.</span>window<span class="token punctuation">.</span><span class="token function">registerTreeDataProvider</span><span class="token punctuation">(</span><span class="token string">&#39;nodeDependencies&#39;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">DepNodeProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,1),h={href:"https://github.com/Microsoft/vscode-extension-samples/tree/master/tree-view-sample/src/nodeDependencies.ts",target:"_blank",rel:"noopener noreferrer"},y=t(`<h2 id="动态创建树视图" tabindex="-1"><a class="header-anchor" href="#动态创建树视图" aria-hidden="true">#</a> 动态创建树视图</h2><hr><p>如果你想在<em>视图</em>中通过编程手段创建一些操作，你就不能再注册<code>window.registerTreeDataProvider</code>了，而是<code>window.createTreeView</code>，这样一来你就有权限提供你喜欢的视图操作了：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>vscode<span class="token punctuation">.</span>window<span class="token punctuation">.</span><span class="token function">createTreeView</span><span class="token punctuation">(</span><span class="token string">&#39;ftpExplorer&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  treeDataProvider<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">FtpTreeDataProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),w={href:"https://github.com/Microsoft/vscode-extension-samples/tree/master/tree-view-sample/src/ftpExplorer.ts",target:"_blank",rel:"noopener noreferrer"};function f(_,x){const e=c("ExternalLinkIcon");return p(),i("div",null,[l,n("p",null,[s("本节将教你如何为VS Code添加"),u,s("和"),d,s("的插件，示例插件的源代码请查看"),n("a",v,[s("https://github.com/Microsoft/vscode-extension-samples/tree/master/tree-view-sample"),a(e)]),s("。")]),k,n("p",null,[s("插件创作者需要注册"),n("a",m,[q,a(e)]),s("，以便动态生成"),b,s("中的数据。")]),g,n("p",null,[s("更多实现请参考"),n("a",h,[s("nodeDependencies.ts"),a(e)])]),y,n("p",null,[s("更多实现请参考"),n("a",w,[s("ftpExplorer.ts"),a(e)])])])}const j=o(r,[["render",f],["__file","05.tree-view.html.vue"]]);export{j as default};
