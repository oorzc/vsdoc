import{_ as p}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c,a as n,b as s,d as t,e,r as i}from"./app.ed9f300c.js";const l={},u=n("h1",{id:"文档选择器",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#文档选择器","aria-hidden":"true"},"#"),s(" 文档选择器")],-1),r=n("p",null,"插件的特性可以通过语言、类型、位置等文档选择器类型加以筛选，本节将深入文档选择器、文档协议等插件创作者应该了解的内容。",-1),d=n("h3",{id:"不在磁盘上的文件",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#不在磁盘上的文件","aria-hidden":"true"},"#"),s(" 不在磁盘上的文件")],-1),k=n("strong",null,"应用",-1),v={href:"https://code.visualstudio.com/docs/extensionAPI/vscode-api#DocumentFilter",target:"_blank",rel:"noopener noreferrer"},m=n("code",null,"scheme",-1),h=n("code",null,"{ scheme: 'file', language: 'typescript' }",-1),g=n("h2",{id:"文档选择器-1",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#文档选择器-1","aria-hidden":"true"},"#"),s(" 文档选择器")],-1),_=n("hr",null,null,-1),b={href:"https://code.visualstudio.com/docs/extensionAPI/vscode-api#DocumentSelector",target:"_blank",rel:"noopener noreferrer"},f={href:"https://code.visualstudio.com/docs/extensionAPI/vscode-api#HoverProvider",target:"_blank",rel:"noopener noreferrer"},y=n("code",null,"typescript",-1),x=e(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>vscode<span class="token punctuation">.</span>languages<span class="token punctuation">.</span><span class="token function">registerHoverProvider</span><span class="token punctuation">(</span><span class="token string">&#39;typescript&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token function">provideHover</span><span class="token punctuation">(</span>doc<span class="token operator">:</span> vscode<span class="token punctuation">.</span>TextDocument<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">vscode</span><span class="token punctuation">.</span><span class="token function">Hover</span><span class="token punctuation">(</span><span class="token string">&#39;For *all* TypeScript documents.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),w={href:"https://code.visualstudio.com/docs/extensionAPI/vscode-api#DocumentFilter",target:"_blank",rel:"noopener noreferrer"},H=n("code",null,"scheme",-1),P=n("code",null,"pattern",-1),S=e(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>vscode<span class="token punctuation">.</span>languages<span class="token punctuation">.</span><span class="token function">registerHoverProvider</span><span class="token punctuation">(</span><span class="token punctuation">{</span> pattern<span class="token operator">:</span> <span class="token string">&#39;**/test/**&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token function">provideHover</span><span class="token punctuation">(</span>doc<span class="token operator">:</span> vscode<span class="token punctuation">.</span>TextDocument<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">vscode</span><span class="token punctuation">.</span><span class="token function">Hover</span><span class="token punctuation">(</span><span class="token string">&#39;For documents inside \`test\`-folders only&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下面这个代码片段使用了<code>scheme</code>过滤器和语言标识符。<code>untitled</code>协议正是为未存到本地磁盘的文件准备的。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>vscode<span class="token punctuation">.</span>languages<span class="token punctuation">.</span><span class="token function">registerHoverProvider</span><span class="token punctuation">(</span><span class="token punctuation">{</span> scheme<span class="token operator">:</span> <span class="token string">&#39;untitled&#39;</span><span class="token punctuation">,</span> language<span class="token operator">:</span> <span class="token string">&#39;typescript&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token function">provideHover</span><span class="token punctuation">(</span>doc<span class="token operator">:</span> vscode<span class="token punctuation">.</span>TextDocument<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">vscode</span><span class="token punctuation">.</span><span class="token function">Hover</span><span class="token punctuation">(</span><span class="token string">&#39;For new, unsaved TypeScript documents only&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="文档协议" tabindex="-1"><a class="header-anchor" href="#文档协议" aria-hidden="true">#</a> 文档协议</h2><hr><p>文档的<code>scheme</code>常常不受人待见，但是它实际上提供了非常重要的信息。大部分文件都是储存在磁盘上的，插件创作者也常假设自己正在处理的文档也是存在磁盘上的。用一个简单的<code>typescript</code>选择器做个例子，其中的假设就是<strong>Typescript在磁盘上</strong>，不过大部分开发场景都过于宽松了，使用了诸如<code>{ scheme: &#39;file&#39;, language: &#39;typescript&#39; }</code>显式的选择器。</p><p>当插件特定依赖于从磁盘上读写时，这个问题显得尤为重要。请看下面的代码：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>vscode<span class="token punctuation">.</span>languages<span class="token punctuation">.</span><span class="token function">registerHoverProvider</span><span class="token punctuation">(</span><span class="token string">&#39;typescript&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token comment">// 👎 过于宽松</span>
    <span class="token function">provideHover</span><span class="token punctuation">(</span>doc<span class="token operator">:</span> vscode<span class="token punctuation">.</span>TextDocument<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> <span class="token punctuation">{</span> size <span class="token punctuation">}</span> <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">statSync</span><span class="token punctuation">(</span>doc<span class="token punctuation">.</span>uri<span class="token punctuation">.</span>fsPath<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ⚠️ &#39;untitled:/Untitled1.ts&#39; 或者其他情况会则么样?</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">vscode</span><span class="token punctuation">.</span><span class="token function">Hover</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Size in bytes is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>size<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的例子里，悬浮提示器想要展示该文档在磁盘上的大小，但是它没有检测文档是不是真的储存在磁盘上，比如一个新创建但还没有保存的文档。正确的方法是告诉VS Code这个功能只在文件储存在磁盘上时才工作：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>vscode<span class="token punctuation">.</span>languages<span class="token punctuation">.</span><span class="token function">registerHoverProvider</span><span class="token punctuation">(</span><span class="token punctuation">{</span> scheme<span class="token operator">:</span> <span class="token string">&#39;file&#39;</span><span class="token punctuation">,</span> language<span class="token operator">:</span> <span class="token string">&#39;typescript&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token comment">// 👍 文件储存在磁盘上时才工作</span>
    <span class="token function">provideHover</span><span class="token punctuation">(</span>doc<span class="token operator">:</span> vscode<span class="token punctuation">.</span>TextDocument<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> <span class="token punctuation">{</span> size <span class="token punctuation">}</span> <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">statSync</span><span class="token punctuation">(</span>doc<span class="token punctuation">.</span>uri<span class="token punctuation">.</span>fsPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">vscode</span><span class="token punctuation">.</span><span class="token function">Hover</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Size in bytes is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>size<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><hr><p>文档通常都储存在文件系统中，但也有例外：未保存的新文件、Git使用的缓存文件、FTP上的远程文件等等。如果你的插件特性依赖于磁盘读取，那么你就要用文档选择器时应带上<code>file</code>协议。</p>`,13);function T(D,F){const a=i("ExternalLinkIcon");return o(),c("div",null,[u,r,d,n("p",null,[s("并不是所有文件都是储存在磁盘上的，比如一份刚刚创建的文件。除非特别指明，文档选择器通常会"),k,s("于所有文档类型。用"),n("a",v,[s("DocumentFilter"),t(a)]),s("的"),m,s("属性将协议范围缩小，比如说，"),h,s("是特用于储存在磁盘上的TypeScript文件的。")]),g,_,n("p",null,[s("VS Code插件 API结合了特定的语言特性，通过文档选择器的"),n("a",b,[s("DocumentSelector"),t(a)]),s("类型，可以支持如智能感知（IntelliSense）的特性，这是实现特定语言所支持特性的最为简单的机制。")]),n("p",null,[s("下面的片段注册了一个TypeScript文件的"),n("a",f,[s("HoverProvider"),t(a)]),s("，文档选择器以"),y,s("作为语言标识符。")]),x,n("p",null,[s("文档选择器可以不只是语言标识符，还可以是"),n("a",w,[s("DocumentFilter"),t(a)]),s("中"),H,s("实现的复杂选择器，文件路径支持"),P,s("参数和glob模式。")]),S])}const V=p(l,[["render",T],["__file","document-selectors.html.vue"]]);export{V as default};
