const e=JSON.parse('{"key":"v-32c896b3","path":"/06.extension-guides/11.debugger-extension.html","title":"调试器插件","lang":"zh-CN","frontmatter":{"summary":"调试器插件 VS Code已经内置了一套通用的用户界面，插件作者能够通过VS Code的调试架构轻松将已有的调试器整合进来。 VS Code已经内置了一个Node.js调试器插件，它将成为你学习VS Code调试器特性的绝佳搭档。 上面的截图展示了以下调试功能： 1. 管理调试器配置 2. 开始、停止、步进等调试操作 3. 源、函数、条件断点、行断点和记录点","head":[["meta",{"property":"og:url","content":"https://oorzc.cn/06.extension-guides/11.debugger-extension.html"}],["meta",{"property":"og:site_name","content":"vscode插件开发文档"}],["meta",{"property":"og:title","content":"调试器插件"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}]]},"excerpt":"","headers":[{"level":2,"title":"VS Code 中的调试架构","slug":"vs-code-中的调试架构","link":"#vs-code-中的调试架构","children":[]},{"level":2,"title":"模拟调试插件","slug":"模拟调试插件","link":"#模拟调试插件","children":[]},{"level":2,"title":"开发环境配置模拟调试","slug":"开发环境配置模拟调试","link":"#开发环境配置模拟调试","children":[]},{"level":2,"title":"剖析调试器插件的package.json","slug":"剖析调试器插件的package-json","link":"#剖析调试器插件的package-json","children":[]},{"level":2,"title":"使用DebugConfigurationProvider","slug":"使用debugconfigurationprovider","link":"#使用debugconfigurationprovider","children":[]},{"level":2,"title":"发布调试器插件","slug":"发布调试器插件","link":"#发布调试器插件","children":[]},{"level":2,"title":"开发调试器插件的其他方式","slug":"开发调试器插件的其他方式","link":"#开发调试器插件的其他方式","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":15.3,"words":4589},"filePathRelative":"06.extension-guides/11.debugger-extension.md"}');export{e as data};
